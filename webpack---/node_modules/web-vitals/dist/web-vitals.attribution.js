var t, n, e, i, a, r, o = function() {
        return window.performance && performance.getEntriesByType && performance.getEntriesByType("navigation")[0]
    },
    u = (null === (t = o()) || void 0 === t ? void 0 : t.navigationId) || "1",
    c = function(t) {
        if ("loading" === document.readyState) return "loading";
        var n = o();
        if (n) {
            if (t < n.domInteractive) return "loading";
            if (0 === n.domContentLoadedEventStart || t < n.domContentLoadedEventStart) return "dom-interactive";
            if (0 === n.domComplete || t < n.domComplete) return "dom-content-loaded"
        }
        return "complete"
    },
    s = function(t) {
        var n = t.nodeName;
        return 1 === t.nodeType ? n.toLowerCase() : n.toUpperCase().replace(/^#/, "")
    },
    v = function(t, n) {
        var e = "";
        try {
            for (; t && 9 !== t.nodeType;) {
                var i = t,
                    a = i.id ? "#" + i.id : s(i) + (i.classList && i.classList.value && i.classList.value.trim() && i.classList.value.trim().length ? "." + i.classList.value.trim().replace(/\s+/g, ".") : "");
                if (e.length + a.length > (n || 100) - 1) return e || a;
                if (e = e ? a + ">" + e : a, i.id) break;
                t = i.parentNode
            }
        } catch (t) {}
        return e
    },
    f = function(t, n, e, i) {
        var a, r;
        return function(o) {
            n.value >= 0 && (o || i) && ((r = n.value - (a || 0)) || void 0 === a) && (a = n.value, n.delta = r, n.rating = function(t, n) {
                return t > n[1] ? "poor" : t > n[0] ? "needs-improvement" : "good"
            }(n.value, e), t(n))
        }
    },
    d = -1,
    l = function() {
        return d
    },
    g = function(t) {
        addEventListener("pageshow", (function(n) {
            n.persisted && (d = n.timeStamp, t(n))
        }), !0)
    },
    m = function(t) {
        requestAnimationFrame((function() {
            return requestAnimationFrame((function() {
                return t()
            }))
        }))
    },
    p = function() {
        var t = o();
        return t && t.activationStart || 0
    },
    h = function(t, n, e, i) {
        var a = o(),
            r = "navigate";
        e ? r = e : l() >= 0 ? r = "back-forward-cache" : a && (document.prerendering || p() > 0 ? r = "prerender" : document.wasDiscarded ? r = "restore" : a.type && (r = a.type.replace(/_/g, "-")));
        return {
            name: t,
            value: void 0 === n ? -1 : n,
            rating: "good",
            delta: 0,
            entries: [],
            id: "v3-".concat(Date.now(), "-").concat(Math.floor(8999999999999 * Math.random()) + 1e12),
            navigationType: r,
            navigationId: i || u
        }
    },
    T = function(t) {
        return PerformanceObserver.supportedEntryTypes.includes("soft-navigation") && t && t.reportSoftNavs
    },
    I = function(t) {
        if (t) {
            var n = window.performance.getEntriesByType("soft-navigation").filter((function(n) {
                return n.navigationId === t
            }));
            return n ? n[0] : void 0
        }
    },
    y = function(t, n, e) {
        var i = T(e);
        try {
            if (PerformanceObserver.supportedEntryTypes.includes(t)) {
                var a = new PerformanceObserver((function(t) {
                    Promise.resolve().then((function() {
                        n(t.getEntries())
                    }))
                }));
                return a.observe(Object.assign({
                    type: t,
                    buffered: !0,
                    includeSoftNavigationObservations: i
                }, e || {})), a
            }
        } catch (t) {}
    },
    E = function(t) {
        var n = function(n) {
            "pagehide" !== n.type && "hidden" !== document.visibilityState || t(n)
        };
        addEventListener("visibilitychange", n, !0), addEventListener("pagehide", n, !0)
    },
    S = -1,
    b = function() {
        return "hidden" !== document.visibilityState || document.prerendering ? 1 / 0 : 0
    },
    C = function(t) {
        "hidden" === document.visibilityState && S > -1 && (S = "visibilitychange" === t.type ? t.timeStamp : 0, w())
    },
    L = function() {
        addEventListener("visibilitychange", C, !0), addEventListener("prerenderingchange", C, !0)
    },
    w = function() {
        removeEventListener("visibilitychange", C, !0), removeEventListener("prerenderingchange", C, !0)
    },
    A = function() {
        return arguments.length > 0 && void 0 !== arguments[0] && arguments[0] && (S = -1), S < 0 && (S = b(), L(), g((function() {
            setTimeout((function() {
                S = b(), L()
            }), 0)
        }))), {
            get firstHiddenTime() {
                return S
            }
        }
    },
    M = function(t) {
        document.prerendering ? addEventListener("prerenderingchange", (function() {
            return t()
        }), !0) : t()
    },
    F = [1800, 3e3],
    k = function(t, n) {
        var e = T(n = n || {}),
            i = 0;
        M((function() {
            var a, r = A(),
                o = h("FCP"),
                c = y("paint", (function(s) {
                    s.forEach((function(s) {
                        if ("first-contentful-paint" === s.name) {
                            e ? s.navigationId && s.navigationId !== o.navigationId && function(e, u) {
                                if (o = h("FCP", 0, e, u), a = f(t, o, F, n.reportAllChanges), "soft-navigation" === e) {
                                    r = A(!0);
                                    var c = u ? I(u) : null;
                                    i = c && c.startTime || 0
                                }
                            }("soft-navigation", s.navigationId) : c.disconnect();
                            var v = 0;
                            if (s.navigationId && s.navigationId !== u) {
                                var d = I(s.navigationId),
                                    l = d && d.startTime ? d.startTime : 0;
                                v = Math.max(s.startTime - l, 0)
                            } else v = Math.max(s.startTime - p(), 0);
                            var g = e && s.navigationId ? I(s.navigationId) : null,
                                m = g && g.startTime ? g.startTime : 0;
                            (s.startTime < r.firstHiddenTime || e && s.navigationId && s.navigationId !== o.navigationId && s.navigationId !== u && m > i) && (o.value = v, o.entries.push(s), o.navigationId = s.navigationId || "1", a(!0))
                        }
                    }))
                }), n);
            c && (a = f(t, o, F, n.reportAllChanges), g((function(e) {
                o = h("FCP", 0, "back-forward-cache", o.navigationId), a = f(t, o, F, n.reportAllChanges), m((function() {
                    o.value = performance.now() - e.timeStamp, a(!0)
                }))
            })))
        }))
    },
    x = [.1, .25],
    P = function(t, n) {
        ! function(t, n) {
            var e, i, a = T(n = n || {}),
                r = !1,
                o = 0;
            k((e = function() {
                var e, i = h("CLS", 0),
                    u = 0,
                    c = [],
                    s = function(a, c) {
                        if (i = h("CLS", 0, a, c), e = f(t, i, x, n.reportAllChanges), u = 0, r = !1, "soft-navigation" === a) {
                            var s = I(c);
                            o = s && s.startTime || 0
                        }
                    },
                    v = function(t) {
                        t.forEach((function(t) {
                            if (a && t.navigationId && t.navigationId !== i.navigationId && (u > i.value && (i.value = u, i.entries = c), e(!0), s("soft-navigation", t.navigationId)), !t.hadRecentInput) {
                                var n = c[0],
                                    r = c[c.length - 1];
                                u && t.startTime - r.startTime < 1e3 && t.startTime - n.startTime < 5e3 ? (u += t.value, c.push(t)) : (u = t.value, c = [t])
                            }
                        })), u > i.value && (i.value = u, i.entries = c, e())
                    },
                    d = y("layout-shift", v, n);
                d && (e = f(t, i, x, n.reportAllChanges), E((function() {
                    v(d.takeRecords()), e(!0), r = !0
                })), g((function() {
                    s("back-forward-cache", i.navigationId), m((function() {
                        return e()
                    }))
                })), a && y("soft-navigation", (function(a) {
                    a.forEach((function(a) {
                        var u = a.navigationId,
                            c = u ? I(u) : null;
                        u && u !== i.navigationId && c && (c.startTime || 0) > o && (r || e(!0), s("soft-navigation", a.navigationId), e = f(t, i, x, n.reportAllChanges))
                    }))
                }), n), setTimeout(e, 0))
            }, i = !1, function(t) {
                i || (e(t), i = !0)
            }))
        }((function(n) {
            ! function(t) {
                if (t.entries.length) {
                    var n = t.entries.reduce((function(t, n) {
                        return t && t.value > n.value ? t : n
                    }));
                    if (n && n.sources && n.sources.length) {
                        var e = (i = n.sources).find((function(t) {
                            return t.node && 1 === t.node.nodeType
                        })) || i[0];
                        if (e) return void(t.attribution = {
                            largestShiftTarget: v(e.node),
                            largestShiftTime: n.startTime,
                            largestShiftValue: n.value,
                            largestShiftSource: e,
                            largestShiftEntry: n,
                            loadState: c(n.startTime)
                        })
                    }
                }
                var i;
                t.attribution = {}
            }(n), t(n)
        }), n)
    },
    B = function(t, n) {
        k((function(n) {
            ! function(t) {
                if (t.entries.length) {
                    var n, e = t.entries[t.entries.length - 1],
                        i = 0;
                    if (t.navigationId && t.navigationId !== u) i = (n = I(t.navigationId)) ? n.startTime : 0;
                    else if (n = o()) {
                        var a = n.activationStart || 0;
                        i = Math.max(0, n.responseStart - a)
                    }
                    if (n) return void(t.attribution = {
                        timeToFirstByte: i,
                        firstByteToFCP: t.value - i,
                        loadState: c(t.entries[0].startTime),
                        navigationEntry: n,
                        fcpEntry: e
                    })
                }
                t.attribution = {
                    timeToFirstByte: 0,
                    firstByteToFCP: t.value,
                    loadState: c(l())
                }
            }(n), t(n)
        }), n)
    },
    D = {
        passive: !0,
        capture: !0
    },
    N = new Date,
    R = function(t, a) {
        n || (n = a, e = t, i = new Date, H(removeEventListener), O())
    },
    O = function() {
        if (e >= 0 && e < i - N) {
            var t = {
                entryType: "first-input",
                name: n.type,
                target: n.target,
                cancelable: n.cancelable,
                startTime: n.timeStamp,
                processingStart: n.timeStamp + e
            };
            a.forEach((function(n) {
                n([t])
            })), a = []
        }
    },
    q = function(t) {
        if (t.cancelable) {
            var n = (t.timeStamp > 1e12 ? new Date : performance.now()) - t.timeStamp;
            "pointerdown" == t.type ? function(t, n) {
                var e = function() {
                        R(t, n), a()
                    },
                    i = function() {
                        a()
                    },
                    a = function() {
                        removeEventListener("pointerup", e, D), removeEventListener("pointercancel", i, D)
                    };
                addEventListener("pointerup", e, D), addEventListener("pointercancel", i, D)
            }(n, t) : R(n, t)
        }
    },
    H = function(t) {
        ["mousedown", "keydown", "touchstart", "pointerdown"].forEach((function(n) {
            return t(n, q, D)
        }))
    },
    j = [100, 300],
    U = function(t, i) {
        var r = T(i = i || {});
        M((function() {
            var o, c = A(),
                s = h("FID"),
                v = function(n) {
                    n.forEach((function(n) {
                        var e, a;
                        r ? n.navigationId && n.navigationId !== s.navigationId && (e = "soft-navigation", a = n.navigationId, "soft-navigation" === e && (c = A(!0)), s = h("FID", 0, e, a), o = f(t, s, j, i.reportAllChanges)) : d.disconnect(), n.startTime < c.firstHiddenTime && (s.value = n.processingStart - n.startTime, s.entries.push(n), s.navigationId = n.navigationId || u, o(!0))
                    }))
                },
                d = y("first-input", v, i);
            o = f(t, s, j, i.reportAllChanges), d && E((function() {
                v(d.takeRecords()), r || d.disconnect()
            })), d && g((function() {
                var r;
                s = h("FID", 0, "back-forward-cache", s.navigationId), o = f(t, s, j, i.reportAllChanges), a = [], e = -1, n = null, H(addEventListener), r = v, a.push(r), O()
            }))
        }))
    },
    V = function(t, n) {
        U((function(n) {
            ! function(t) {
                var n = t.entries[0];
                t.attribution = {
                    eventTarget: v(n.target),
                    eventType: n.name,
                    eventTime: n.startTime,
                    eventEntry: n,
                    loadState: c(n.startTime)
                }
            }(n), t(n)
        }), n)
    },
    _ = 0,
    z = 1 / 0,
    G = 0,
    J = u,
    K = !1,
    Q = function(t) {
        t.forEach((function(t) {
            t.interactionId && (K && t.navigationId && t.navigationId !== J && (J = t.navigationId, _ = 0, z = 1 / 0, G = 0), z = Math.min(z, t.interactionId), G = Math.max(G, t.interactionId), _ = G ? (G - z) / 7 + 1 : 0)
        }))
    },
    W = function() {
        return r ? _ : performance.interactionCount || 0
    },
    X = function(t) {
        "interactionCount" in performance || r || (r = y("event", Q, {
            type: "event",
            buffered: !0,
            durationThreshold: 0,
            includeSoftNavigationObservations: K = t || !1
        }))
    },
    Y = [200, 500],
    Z = 0,
    $ = function() {
        return W() - Z
    },
    tt = [],
    nt = {},
    et = function(t) {
        var n = tt[tt.length - 1],
            e = nt[t.interactionId];
        if (e || tt.length < 10 || t.duration > n.latency) {
            if (e) e.entries.push(t), e.latency = Math.max(e.latency, t.duration);
            else {
                var i = {
                    id: t.interactionId,
                    latency: t.duration,
                    entries: [t]
                };
                nt[i.id] = i, tt.push(i)
            }
            tt.sort((function(t, n) {
                return n.latency - t.latency
            })), tt.splice(10).forEach((function(t) {
                delete nt[t.id]
            }))
        }
    },
    it = function(t, n) {
        var e = T(n = n || {}),
            i = !1,
            a = 0;
        M((function() {
            var r;
            X(e);
            var o, u = h("INP"),
                c = function(e, r) {
                    if (tt = [], Z = "soft-navigation" === e ? 0 : W(), u = h("INP", 0, e, r), o = f(t, u, Y, n.reportAllChanges), i = !1, "soft-navigation" === e) {
                        var c = I(r);
                        a = c && c.startTime ? c.startTime : 0
                    }
                },
                s = function() {
                    var t, e = (t = Math.min(tt.length - 1, Math.floor($() / 50)), tt[t]);
                    e && (e.latency !== u.value || n && n.reportAllChanges) && (u.value = e.latency, u.entries = e.entries)
                },
                v = function(t) {
                    t.forEach((function(t) {
                        (e && t.navigationId && t.navigationId !== u.navigationId && (i || (s(), u.value > 0 && o(!0)), c("soft-navigation", t.navigationId)), t.interactionId && et(t), "first-input" === t.entryType) && (!tt.some((function(n) {
                            return n.entries.some((function(n) {
                                return t.duration === n.duration && t.startTime === n.startTime
                            }))
                        })) && et(t))
                    })), s(), o()
                },
                d = y("event", v, {
                    durationThreshold: null !== (r = n.durationThreshold) && void 0 !== r ? r : 40,
                    opts: n
                });
            if (o = f(t, u, Y, n.reportAllChanges), d) {
                "PerformanceEventTiming" in window && "interactionId" in PerformanceEventTiming.prototype && d.observe({
                    type: "first-input",
                    buffered: !0,
                    includeSoftNavigationObservations: e
                }), E((function() {
                    v(d.takeRecords()), u.value < 0 && $() > 0 && (u.value = 0, u.entries = []), o(!0)
                })), g((function() {
                    c("back-forward-cache", u.navigationId), m((function() {
                        return o()
                    }))
                }));
                e && y("soft-navigation", (function(e) {
                    e.forEach((function(e) {
                        var r = I(e.navigationId),
                            s = r && r.startTime ? r.startTime : 0;
                        e.navigationId && e.navigationId !== u.navigationId && s > a && (!i && u.value > 0 && o(!0), c("soft-navigation", e.navigationId), o = f(t, u, Y, n.reportAllChanges))
                    }))
                }), n)
            }
        }))
    },
    at = function(t, n) {
        it((function(n) {
            ! function(t) {
                if (t.entries.length) {
                    var n = t.entries.sort((function(t, n) {
                            return n.duration - t.duration || n.processingEnd - n.processingStart - (t.processingEnd - t.processingStart)
                        }))[0],
                        e = t.entries.find((function(t) {
                            return t.target
                        }));
                    t.attribution = {
                        eventTarget: v(e && e.target),
                        eventType: n.name,
                        eventTime: n.startTime,
                        eventEntry: n,
                        loadState: c(n.startTime)
                    }
                } else t.attribution = {}
            }(n), t(n)
        }), n)
    },
    rt = [2500, 4e3],
    ot = function(t, n) {
        ! function(t, n) {
            var e = !1,
                i = T(n = n || {}),
                a = 0;
            M((function() {
                var r, o = A(),
                    c = h("LCP"),
                    s = function(i, u) {
                        if (c = h("LCP", 0, i, u), r = f(t, c, rt, n.reportAllChanges), e = !1, "soft-navigation" === i) {
                            o = A(!0);
                            var s = I(u);
                            a = s && s.startTime ? s.startTime : 0
                        }
                    },
                    v = function(t) {
                        t.forEach((function(t) {
                            if (t) {
                                i && t.navigationId && t.navigationId !== c.navigationId && (e || r(!0), s("soft-navigation", t.navigationId));
                                var n = 0;
                                if (t.navigationId && t.navigationId !== u) {
                                    var a = I(t.navigationId),
                                        v = a && a.startTime ? a.startTime : 0;
                                    n = Math.max(t.startTime - v, 0)
                                } else n = Math.max(t.startTime - p(), 0);
                                t.startTime < o.firstHiddenTime && (c.value = n, c.entries = [t], c.navigationId = t.navigationId || u, r())
                            }
                        }))
                    },
                    d = function() {
                        e || (v(l.takeRecords()), i || l.disconnect(), e = !0, r(!0))
                    },
                    l = y("largest-contentful-paint", v, n);
                l && (r = f(t, c, rt, n.reportAllChanges), ["keydown", "click"].forEach((function(t) {
                    addEventListener(t, (function() {
                        return setTimeout(d, 0)
                    }), !0)
                })), E(d), g((function(t) {
                    s("back-forward-cache", c.navigationId), m((function() {
                        c.value = performance.now() - t.timeStamp, e = !0, r(!0)
                    }))
                })), i && y("soft-navigation", (function(t) {
                    t.forEach((function(t) {
                        var n = t.navigationId ? I(t.navigationId) : null;
                        t.navigationId && t.navigationId !== c.navigationId && n && (n.startTime || 0) > a && (e || r(!0), s("soft-navigation", t.navigationId))
                    }))
                }), n))
            }))
        }((function(n) {
            ! function(t) {
                if (t.entries.length) {
                    var n, e = 0,
                        i = 0,
                        a = 0;
                    if (t.navigationId && t.navigationId !== u ? e = a = (n = I(t.navigationId)) ? n.startTime : 0 : (e = (n = o()) && n.activationStart ? n.activationStart : 0, i = n && n.responseStart ? n.responseStart : 0), n) {
                        var r = t.entries[t.entries.length - 1],
                            c = r.url && performance.getEntriesByType("resource").filter((function(t) {
                                return t.name === r.url
                            }))[0],
                            s = Math.max(0, i - e),
                            f = Math.max(s, c ? (c.requestStart || c.startTime) - e : 0),
                            d = Math.max(f - a, c ? c.responseEnd - e : 0, 0),
                            l = Math.max(d - a, r ? r.startTime - e : 0, 0),
                            g = {
                                element: v(r.element),
                                timeToFirstByte: s,
                                resourceLoadDelay: f - s,
                                resourceLoadTime: d - f,
                                elementRenderDelay: l - d,
                                navigationEntry: n,
                                lcpEntry: r
                            };
                        return r.url && (g.url = r.url), c && (g.lcpResourceEntry = c), void(t.attribution = g)
                    }
                }
                t.attribution = {
                    timeToFirstByte: 0,
                    resourceLoadDelay: 0,
                    resourceLoadTime: 0,
                    elementRenderDelay: t.value
                }
            }(n), t(n)
        }), n)
    },
    ut = [800, 1800],
    ct = o(),
    st = function t(n) {
        document.prerendering ? M((function() {
            return t(n)
        })) : "complete" !== document.readyState ? addEventListener("load", (function() {
            return t(n)
        }), !0) : setTimeout(n, 0)
    },
    vt = function(t, n) {
        var e = T(n = n || {}),
            i = h("TTFB"),
            a = f(t, i, ut, n.reportAllChanges);
        st((function() {
            if (ct) {
                var r = ct.responseStart;
                if (r <= 0 || r > performance.now()) return;
                i.value = Math.max(r - p(), 0), i.entries = [ct], a(!0), g((function() {
                    i = h("TTFB", 0, "back-forward-cache", i.navigationId), (a = f(t, i, ut, n.reportAllChanges))(!0)
                }));
                e && y("soft-navigation", (function(e) {
                    e.forEach((function(e) {
                        e.navigationId && ((i = h("TTFB", 0, "soft-navigation", e.navigationId)).entries = [e], (a = f(t, i, ut, n.reportAllChanges))(!0))
                    }))
                }), n)
            }
        }))
    },
    ft = function(t, n) {
        vt((function(n) {
            ! function(t) {
                if (t.entries.length) {
                    var n = t.entries[0],
                        e = n.activationStart || 0,
                        i = Math.max(n.domainLookupStart - e || 0, 0),
                        a = Math.max(n.connectStart - e || 0, 0),
                        r = Math.max(n.requestStart - e || 0, 0);
                    t.attribution = {
                        waitingTime: i,
                        dnsTime: a - i,
                        connectionTime: r - a,
                        requestTime: t.value - r,
                        navigationEntry: n
                    }
                } else t.attribution = {
                    waitingTime: 0,
                    dnsTime: 0,
                    connectionTime: 0,
                    requestTime: 0
                }
            }(n), t(n)
        }), n)
    };
export {
    x as CLSThresholds, F as FCPThresholds, j as FIDThresholds, Y as INPThresholds, rt as LCPThresholds, ut as TTFBThresholds, P as onCLS, B as onFCP, V as onFID, at as onINP, ot as onLCP, ft as onTTFB
};