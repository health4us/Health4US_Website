import {
    __read,
    __spreadArray
} from "tslib";
import {
    UrlMapperValidators
} from '../validator';
import {
    getUrlMappingVariablesSchema,
} from './types';
export var getDefaultMapping = function(urlMappingKey, pathPrefix) {
    var _a, _b;
    var _c = getUrlMappingVariablesSchema()[urlMappingKey] || {
            required: ['slug'],
        },
        required = _c.required,
        defaultPrefix = _c.defaultPrefix;
    if (pathPrefix && typeof pathPrefix === 'object') {
        pathPrefix = (_b = (_a = pathPrefix.publishedPrefix) !== null && _a !== void 0 ? _a : pathPrefix.savedPrefix) !== null && _b !== void 0 ? _b : '';
    }
    return __spreadArray([pathPrefix, defaultPrefix], __read(required === null || required === void 0 ? void 0 : required.map(function(main) {
            return "{{".concat(main, "}}");
        })), false).filter(Boolean)
        .join('/');
};
export var getPathPrefixesValidationMapping = function(urlMappingKey, pathPrefix) {
    var _a, _b;
    var _c = getUrlMappingVariablesSchema()[urlMappingKey] || {
            required: ['slug'],
        },
        required = _c.required,
        defaultPrefix = _c.defaultPrefix;
    var result = {};
    if (pathPrefix && typeof pathPrefix === 'object') {
        result.savedPrefix = (_a = pathPrefix.savedPrefix) !== null && _a !== void 0 ? _a : '';
        result.publishedPrefix = (_b = pathPrefix.publishedPrefix) !== null && _b !== void 0 ? _b : '';
    } else {
        result.savedPrefix = UrlMapperValidators.FALLBACK_PATH_PREFIX;
        result.publishedPrefix = UrlMapperValidators.FALLBACK_PATH_PREFIX;
    }
    var defaultSaved = __spreadArray([
            result.savedPrefix,
            defaultPrefix
        ], __read(required === null || required === void 0 ? void 0 : required.map(function(main) {
            return "{{".concat(main, "}}");
        })), false).filter(Boolean)
        .join('/');
    var defaultPublished = __spreadArray([
            result.publishedPrefix,
            defaultPrefix
        ], __read(required === null || required === void 0 ? void 0 : required.map(function(main) {
            return "{{".concat(main, "}}");
        })), false).filter(Boolean)
        .join('/');
    return {
        defaultSaved: defaultSaved,
        defaultPublished: defaultPublished
    };
};
//# sourceMappingURL=get-default-mapping.js.map