'use strict'

const Just = value => ({
    map: cb => Just(cb(value)),
    chain: cb => cb(value),
    fold: (_, cb) => cb(value),
    getOrElse: () => value,
    orElse: () => Just(value),
    filter: cb => (cb(value) ? Just(value) : Nothing())
})

const Nothing = () => ({
    map: () => Nothing(),
    chain: () => Nothing(),
    fold: cb => cb(),
    getOrElse: fallback => fallback,
    orElse: cb => cb(),
    filter: () => Nothing()
})

const fromNullable = val => (val != null ? Just(val) : Nothing())
const of = val => Just(val)

const Maybe = {
    Just,
    Nothing,
    fromNullable,
    of
}

module.exports = Maybe