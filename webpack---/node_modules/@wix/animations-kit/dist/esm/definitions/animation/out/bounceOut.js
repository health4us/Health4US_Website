import {
    __rest
} from "tslib";
const name = 'BounceOut';
const properties = {
    groups: ['exit', 'animation'],
    schema: {
        duration: {
            type: 'number',
            min: 0,
            default: 0,
        },
        delay: {
            type: 'number',
            min: 0,
            default: 0,
        },
        bounce: {
            type: 'string',
            enum: ['soft', 'medium', 'hard'],
            default: 'medium',
        },
        direction: {
            type: 'string',
            enum: ['top left', 'top right', 'center', 'bottom right', 'bottom left'],
            default: 'top left',
        },
    },
};
const transformOrigins = {
    'top left': '0 0',
    'top right': '100% 0',
    'bottom left': '0 100%',
    'bottom right': '100% 100%',
    center: '50% 50%',
};
const easeParams = {
    soft: [0.6],
    medium: [1],
    hard: [1.5],
};
/**
 * BounceOut animation object, NOTE: doesn't bounce, only slides.
 */
function animate(kit, elements, duration, delay, _a = {}) {
    var {
        direction = properties.schema.direction.default, bounce = properties.schema.bounce.default
    } = _a, params = __rest(_a, ["direction", "bounce"]);
    const transformOrigin = transformOrigins[direction];
    const fadeInDuration = 0.15;
    const sequence = kit.sequence(params);
    sequence
        .add(kit.animate('BaseNone', elements, 0, 0, {
            transformOrigin
        }), 0)
        .add(kit.animate('BaseScale', elements, duration, delay, {
            to: {
                scale: 0
            },
            ease: 'Quint.easeIn',
            easeParams: easeParams[bounce],
        }), 0)
        .add(kit.animate('BaseFade', elements, fadeInDuration, delay, {
            to: {
                autoAlpha: 0
            },
            ease: 'Sine.easeOut',
        }), `-=${fadeInDuration}`);
    return sequence.get();
}
export {
    name,
    properties,
    animate
};
//# sourceMappingURL=bounceOut.js.map