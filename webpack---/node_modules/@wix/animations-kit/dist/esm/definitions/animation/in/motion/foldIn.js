import {
    __rest
} from "tslib";
import {
    getAdjustedDirection,
    getElementTransformedPosition,
    getTransformOriginTweenParams,
} from '../../../../utils/animationsUtils';
import {
    deg2rad
} from '@wix/wow-utils';
const name = 'FoldIn';
const properties = {
    schema: {}
};
const paramsMap = {
    top: {
        x: -1,
        y: 0,
        origin: {
            x: '50%',
            y: '0'
        },
        idx: 0
    },
    right: {
        x: 0,
        y: -1,
        origin: {
            x: '100%',
            y: '50%'
        },
        idx: 1
    },
    bottom: {
        x: 1,
        y: 0,
        origin: {
            x: '50%',
            y: '100%'
        },
        idx: 2
    },
    left: {
        x: 0,
        y: 1,
        origin: {
            x: '0',
            y: '50%'
        },
        idx: 3
    },
};
const powerMap = {
    soft: {
        initialRotate: 35
    },
    medium: {
        initialRotate: 60
    },
    hard: {
        initialRotate: 90
    },
};

function animate(kit, elements, duration, delay, _a = {}) {
    var {
        direction = 'top', easing = 'backOut', power, initialRotate = 90
    } = _a, params = __rest(_a, ["direction", "easing", "power", "initialRotate"]);
    const sequence = kit.sequence(params);
    const rotation = typeof power !== 'undefined' ?
        powerMap[power].initialRotate :
        initialRotate;
    sequence.add(kit.animate('BaseFade', elements, 0, 0, {
        to: {
            opacity: 0.01
        }
    }));
    sequence.add(kit.animate('BaseFade', elements, duration, delay, {
        to: {
            opacity: 1,
        },
        ease: 'quadOut',
    }), 'animation-start');
    elements.forEach((element) => {
        const elementAngleInDeg = Number(kit.engine.getProperty(element, '--comp-rotate-z') || 0);
        const adjDirection = getAdjustedDirection(paramsMap, direction, elementAngleInDeg);
        const compRect = kit.engine.getBoundingRect(element);
        const contentRect = kit.engine.getBoundingContentRect(element);
        const {
            x,
            y
        } = getElementTransformedPosition(paramsMap[adjDirection].origin, contentRect, deg2rad(elementAngleInDeg));
        const transformOrigin = getTransformOriginTweenParams(compRect, contentRect, paramsMap[adjDirection].origin);
        const from = {
            rotationX: paramsMap[adjDirection].x * rotation,
            rotationY: paramsMap[adjDirection].y * rotation,
        };
        // the tween
        sequence.add([
            kit.animate('BasePosition', element, 0, delay, {
                transformOrigin,
                x,
                y,
            }),
            kit.animate('BaseRotate3D', element, duration, delay, {
                from,
                perspective: 800,
                ease: easing,
            }),
        ], 'animation-start');
    });
    return sequence.get();
}
export {
    name,
    properties,
    animate
};
//# sourceMappingURL=foldIn.js.map