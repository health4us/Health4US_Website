import {
    __rest
} from "tslib";
const name = 'ArcScroll';
const properties = {
    schema: {},
};
const directionMap = {
    vertical: 'rotationX',
    horizontal: 'rotationY',
};
const ease = 'linear';
const ROTATION = 68;
const rangeValues = { in: {
        fromValue: -ROTATION,
        toValue: 0
    },
    out: {
        fromValue: 0,
        toValue: ROTATION
    },
    continuous: {
        fromValue: -ROTATION,
        toValue: ROTATION
    },
};
/**
 * Arc Scroll
 */
function animate(kit, elements, _duration, _delay, _a = {}) {
    var {
        direction = 'horizontal', range = 'in'
    } = _a, params = __rest(_a, ["direction", "range"]);
    const sequence = kit.sequence(params);
    const rotationAxis = directionMap[direction];
    const {
        fromValue,
        toValue
    } = rangeValues[range];
    sequence.add(kit.animate('BaseRotate3D', elements, 1000, 0, {
        from: {
            [rotationAxis]: fromValue,
            transformOrigin: `50% 50% -300px`,
            transformPerspective: 500,
        },
        to: {
            [rotationAxis]: toValue,
            transformOrigin: `50% 50% -300px`,
            transformPerspective: 500,
        },
        ease,
    }));
    return sequence.get();
}
export {
    name,
    properties,
    animate
};
//# sourceMappingURL=arcScroll.js.map