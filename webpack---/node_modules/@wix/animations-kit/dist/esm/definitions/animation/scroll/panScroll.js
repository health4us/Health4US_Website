import {
    __rest
} from "tslib";
import {
    getCssUnits
} from '../../../utils/animationsUtils';
const name = 'PanScroll';
const properties = {
    schema: {},
};
const directions = {
    left: 1,
    right: -1,
};
const ease = 'linear';
const rangeValues = { in: (startX, _endX) => ({
        fromValue: startX,
        toValue: 0,
    }),
    out: (startX, _endX) => ({
        fromValue: 0,
        toValue: startX,
    }),
    continuous: (startX, endX) => ({
        fromValue: startX,
        toValue: endX,
    }),
};
/**
 * Pan Scroll
 */
function animate(kit, elements, _duration, _delay, _a = {}) {
    var {
        distance = {
            value: 400,
            type: 'px'
        }, direction = 'left', startFromOffScreen = true, range = 'in'
    } = _a, params = __rest(_a, ["distance", "direction", "startFromOffScreen", "range"]);
    const sequence = kit.sequence(params);
    elements.forEach((element) => {
        const {
            left,
            width
        } = element.getBoundingClientRect();
        const {
            innerWidth
        } = kit.frame;
        const positions = {
            left: {
                startX: -left - width,
                endX: innerWidth - left,
            },
            right: {
                startX: innerWidth - left,
                endX: -left - width,
            },
        };
        const travel = distance.value * directions[direction];
        const {
            startX,
            endX
        } = startFromOffScreen
            ?
            positions[direction] :
            {
                startX: `${-travel}${getCssUnits(distance.type)}`,
                endX: `${travel}${getCssUnits(distance.type)}`,
            };
        const {
            fromValue,
            toValue
        } = rangeValues[range](startX, endX);
        sequence.add(kit.animate('BasePosition', elements, 1000, 0, {
            from: {
                x: fromValue
            },
            to: {
                x: toValue
            },
            ease,
        }));
    });
    return sequence.get();
}
export {
    name,
    properties,
    animate
};
//# sourceMappingURL=panScroll.js.map