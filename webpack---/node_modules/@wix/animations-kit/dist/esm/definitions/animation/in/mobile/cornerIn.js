import {
    __rest
} from "tslib";
import {
    setSmoothTransformOrigin
} from '../../../../utils/animationsUtils';
const name = 'CornerIn';
const properties = {
    hideOnStart: true,
    mobile: true,
    viewportThreshold: 0.15,
    groups: ['entrance', 'animation'],
    schema: {
        duration: {
            type: 'number',
            min: 0,
            default: 0,
        },
        delay: {
            type: 'number',
            min: 0,
            default: 0,
        },
        direction: {
            type: 'string',
            enum: ['right', 'left'],
            default: 'right',
        },
    },
};
const paramsMap = {
    left: {
        dx: -1,
        angle: 45
    },
    right: {
        dx: 1,
        angle: 45
    },
};

function animate(kit, elements, duration, delay, _a = {}) {
    var {
        direction = properties.schema.direction.default
    } = _a, params = __rest(_a, ["direction"]);
    const origin = paramsMap[direction];
    const transformRotate = (origin.dx > 0 ? '+=' : '-=') + origin.angle;
    const sequence = kit.sequence(params);
    sequence.add(kit.animate('BaseFade', elements, duration, delay, {
        from: {
            opacity: 0
        },
        to: {
            opacity: 1
        },
        ease: 'Linear.easeIn',
    }));
    elements.forEach((element) => {
        const transformOrigin = origin.dx > 0 ? '100% 100%' : '0 100%';
        sequence.add([
            setSmoothTransformOrigin(element, transformOrigin, kit.animate),
            kit.animate('BaseRotate', element, duration, delay, {
                from: {
                    rotation: transformRotate
                },
                ease: 'Quad.easeOut',
                immediateRender: false,
            }),
        ], 0);
    });
    return sequence.get();
}
export {
    name,
    properties,
    animate
};
//# sourceMappingURL=cornerIn.js.map