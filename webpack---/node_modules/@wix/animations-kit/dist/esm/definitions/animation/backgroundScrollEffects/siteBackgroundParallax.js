import {
    __rest
} from "tslib";
const name = 'SiteBackgroundParallax';
const properties = {
    hideOnStart: false,
    getMaxTravel(_elementMeasure, viewportHeight, siteHeight) {
        return Math.max(siteHeight - viewportHeight, 0);
    },
    groups: ['animation', 'background', 'legacy', 'site'],
    schema: {
        duration: {
            type: 'number',
            min: 0,
            default: 0,
        },
        delay: {
            type: 'number',
            min: 0,
            default: 0,
        },
        speedFactor: {
            type: 'number',
            default: 0.2,
        },
    },
};
/**
 * Move an element vertically (from y:0)
 */
function animate(kit, elements, duration, delay, _a = {}) {
    var {
        speedFactor = properties.schema.speedFactor.default
    } = _a, params = __rest(_a, ["speedFactor"]);
    const sequence = kit.sequence(params);
    const maxY = Math.max(kit.frame.document.body.scrollHeight * speedFactor, 0);
    const desiredY = kit.frame.innerHeight * speedFactor;
    const y = Math.min(maxY, desiredY);
    sequence.add(kit.animate('BasePosition', elements, duration, delay, {
        from: {
            y: 0
        },
        to: {
            y: -y
        },
        force3D: true,
        ease: 'Linear.easeNone',
    }));
    return sequence.get();
}
export {
    name,
    properties,
    animate
};
//# sourceMappingURL=siteBackgroundParallax.js.map