import {
    __rest
} from "tslib";
import {
    getClipParams,
    getAdjustedDirection,
} from '../../../../utils/animationsUtils';
const name = 'RevealIn';
const properties = {
    schema: {}
};
const paramsMap = {
    top: {
        dx: 0,
        dy: -1,
        idx: 0
    },
    right: {
        dx: 1,
        dy: 0,
        idx: 1
    },
    bottom: {
        dx: 0,
        dy: 1,
        idx: 2
    },
    left: {
        dx: -1,
        dy: 0,
        idx: 3
    },
};

function animate(kit, elements, duration, delay, _a = {}) {
    var {
        direction = 'left', easing = 'cubicInOut'
    } = _a, params = __rest(_a, ["direction", "easing"]);
    const sequence = kit.sequence(params);
    elements.forEach((element) => {
        const compRect = kit.engine.getBoundingRect(element);
        const contentRect = kit.engine.getBoundingContentRect(element);
        const elementAngleInDeg = Number(kit.engine.getProperty(element, '--comp-rotate-z') || 0);
        const adjDirection = getAdjustedDirection(paramsMap, direction, elementAngleInDeg);
        const from = getClipParams(compRect, contentRect, adjDirection);
        sequence.add(kit.animate('BaseClipPath', element, duration, delay, {
            from,
            ease: easing,
        }), 0);
    });
    return sequence.get();
}
export {
    name,
    properties,
    animate
};
//# sourceMappingURL=revealIn.js.map