import {
    __rest
} from "tslib";
import {
    getPositionParams
} from '../../../utils/animationsUtils';
const name = 'ModesMotionNoDimensions';
const properties = {
    groups: ['entrance', 'animation'],
    modeChange: true,
    schema: {
        duration: {
            type: 'number',
            min: 0,
            default: 0,
        },
        delay: {
            type: 'number',
            min: 0,
            default: 0,
        },
    },
};
/**
 * Shift animation object
 */
function animate(kit, elements, duration, delay, _a) {
    var {
        from
    } = _a, params = __rest(_a, ["from"]);
    const sequence = kit.sequence(params);
    elements.forEach((element) => {
        const elementViewPortDim = kit.engine.getBoundingRect(element);
        const positionParams = getPositionParams(elementViewPortDim, from);
        sequence.add(kit.animate('BasePosition', element, duration, delay, {
            from: positionParams,
            ease: 'Cubic.easeInOut',
        }), 0);
        sequence.add(kit.animate('BaseRotate', element, duration, delay, {
            from: {
                rotation: from.rotation
            },
            ease: 'Cubic.easeInOut',
        }), 0);
    });
    return sequence.get();
}
export {
    name,
    properties,
    animate
};
//# sourceMappingURL=ModesMotionNoDimensions.js.map