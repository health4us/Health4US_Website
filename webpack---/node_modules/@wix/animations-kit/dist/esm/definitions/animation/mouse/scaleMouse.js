import {
    mapRange
} from '@wix/wow-utils';
import {
    getCssUnits,
    getMouseTransitionEasing,
} from '../../../utils/animationsUtils';
export const name = 'ScaleMouse';
export const properties = {
    schema: {},
};
export function animate(_kit, elements, _duration, _delay, {
    inverted = false,
    distance = {
        value: 80,
        type: 'px'
    },
    axis = 'both',
    scale = 1.4,
    transitionDuration,
    transitionEasing = 'linear',
} = {}) {
    const element = elements[0];
    const invert = inverted ? -1 : 1;
    if (transitionDuration) {
        element.style.transition = `transform ${transitionDuration}ms ${getMouseTransitionEasing(transitionEasing)}`;
    }
    return {
        progress({
            x: progressX,
            y: progressY
        }) {
            let translateX = 0;
            let translateY = 0;
            let scaleX = 1;
            let scaleY = 1;
            if (axis === 'both' || axis === 'horizontal') {
                translateX =
                    mapRange(0, 1, -distance.value, distance.value, progressX) * invert;
                scaleX =
                    progressX < 0.5 ?
                    mapRange(0, 0.5, scale, 1, progressX) :
                    mapRange(0.5, 1, 1, scale, progressX);
            }
            if (axis === 'both' || axis === 'vertical') {
                translateY =
                    mapRange(0, 1, -distance.value, distance.value, progressY) * invert;
                scaleY =
                    progressY < 0.5 ?
                    mapRange(0, 0.5, scale, 1, progressY) :
                    mapRange(0.5, 1, 1, scale, progressY);
            }
            // scale is uniform so we use the smaller scale value if scale < 1
            // and the bigger scale value if scale > 1
            const scaleBoth = scale < 1 ? Math.min(scaleX, scaleY) : Math.max(scaleX, scaleY);
            const units = getCssUnits(distance.type);
            const transform = `translateX(${translateX}${units}) translateY(${translateY}${units}) scale(${scaleBoth}) rotate(var(--comp-rotate-z, 0deg))`;
            element.style.transform = transform;
        },
        kill() {
            element.style.transform = '';
            element.style.transition = '';
        },
    };
}
//# sourceMappingURL=scaleMouse.js.map