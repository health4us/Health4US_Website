import {
    __rest
} from "tslib";
import {
    keyframesToDuration,
    mapRange
} from '../../../utils/animationsUtils';
const name = 'Rubber';
const properties = {
    schema: {},
};
const keyframes_scaleX_scaleY = [{
        keyframe: 45,
        scaleX: 1.03,
        scaleY: 0.93
    },
    {
        keyframe: 56,
        scaleX: 0.9,
        scaleY: 1.03
    },
    {
        keyframe: 66,
        scaleX: 1.02,
        scaleY: 0.96
    },
    {
        keyframe: 78,
        scaleX: 0.98,
        scaleY: 1.02
    },
    {
        keyframe: 89,
        scaleX: 1.005,
        scaleY: 0.9995
    },
    {
        keyframe: 100,
        scaleX: 1,
        scaleY: 1
    },
];
const powerMap = {
    soft: {
        rubberOffset: 0
    },
    medium: {
        rubberOffset: 0.05
    },
    hard: {
        rubberOffset: 0.1
    },
};
/**
 * Rubber animation object
 */
function animate(kit, elements, duration, delay, _a = {}) {
    var {
        power,
        intensity = 0.5
    } = _a, params = __rest(_a, ["power", "intensity"]);
    const sequence = kit.sequence(params);
    const durations = keyframesToDuration(keyframes_scaleX_scaleY, duration);
    const responsiveRubberOffset = mapRange(0, 1, powerMap.soft.rubberOffset, powerMap.hard.rubberOffset, intensity);
    const rubberOffset = typeof power !== 'undefined' ?
        powerMap[power].rubberOffset :
        responsiveRubberOffset;
    keyframes_scaleX_scaleY.forEach(({
        scaleX,
        scaleY
    }, index) => {
        const isLastKeyframe = index === keyframes_scaleX_scaleY.length - 1;
        const isEvenKeyframe = index % 2 === 0;
        const offset = rubberOffset * (isLastKeyframe ? 0 : isEvenKeyframe ? 1 : -0.5);
        sequence.add(kit.animate('BaseScale', elements, durations[index], 0, {
            to: {
                scaleX: scaleX + offset,
                scaleY: scaleY - offset,
            },
        }));
    });
    sequence.add(kit.animate('BaseNone', elements, delay, 0)); // add repeat delay
    return sequence.get();
}
export {
    name,
    properties,
    animate
};
//# sourceMappingURL=rubber.js.map