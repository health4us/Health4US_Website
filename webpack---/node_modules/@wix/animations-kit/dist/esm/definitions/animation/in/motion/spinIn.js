import {
    __rest
} from "tslib";
const name = 'SpinIn';
const properties = {
    schema: {}
};
const directionMap = {
    clockwise: -1,
    'counter-clockwise': 1,
};
const scaleMap = {
    soft: 1,
    medium: 0.6,
    hard: 0,
};

function animate(kit, elements, duration, delay, _a = {}) {
    var {
        direction = 'clockwise', spins = 0.5, power, initialScale = 0, easing = 'cubicInOut'
    } = _a, params = __rest(_a, ["direction", "spins", "power", "initialScale", "easing"]);
    const scale = typeof power !== 'undefined' ? scaleMap[power] : initialScale;
    const transformRotate = (directionMap[direction] > 0 ? '+=' : '-=') + 360 * spins;
    const sequence = kit.sequence(params);
    sequence.add(kit.animate('BaseFade', elements, 0, 0, {
        to: {
            opacity: 0.01
        }
    }));
    sequence.add([
        kit.animate('BaseFade', elements, duration * scale, delay, {
            to: {
                opacity: 1,
            },
            ease: 'cubicIn',
        }),
        kit.animate('BaseScale', elements, duration, delay, {
            from: {
                scale
            },
            ease: easing,
            immediateRender: false,
        }),
        kit.animate('BaseRotate', elements, duration, delay, {
            from: {
                rotation: transformRotate
            },
            ease: easing,
        }),
    ]);
    return sequence.get();
}
export {
    name,
    properties,
    animate
};
//# sourceMappingURL=spinIn.js.map