import {
    __rest
} from "tslib";
const name = 'GlideOut';
const properties = {
    groups: ['exit', 'animation'],
    schema: {
        duration: {
            type: 'number',
            min: 0,
            default: 0,
        },
        delay: {
            type: 'number',
            min: 0,
            default: 0,
        },
        angle: {
            type: 'number',
            min: 0,
            max: 360,
            default: 0,
        },
        distance: {
            type: 'number',
            min: 0,
            default: 0,
        },
    },
};
/**
 * GlideIn animation object
 */
function animate(kit, elements, duration, delay, _a = {}) {
    var {
        angle = properties.schema.angle.default, distance = properties.schema.distance.default
    } = _a, params = __rest(_a, ["angle", "distance"]);
    const angleInRad = (angle * Math.PI) / 180;
    const transformX = Math.sin(angleInRad) * distance;
    const transformY = Math.cos(angleInRad) * distance * -1;
    const fadeDuration = 0.1;
    const sequence = kit.sequence(params);
    sequence
        .add(kit.animate('BasePosition', elements, duration, delay, {
            to: {
                x: transformX,
                y: transformY
            },
            ease: 'Sine.easeInOut',
        }), 0)
        .add(kit.animate('BaseFade', elements, fadeDuration, 0, {
            from: {
                opacity: 1
            },
            to: {
                autoAlpha: 0
            },
            ease: 'Sine.easeOut',
            immediateRender: false,
        }), `-=${fadeDuration}`);
    return sequence.get();
}
export {
    name,
    properties,
    animate
};
//# sourceMappingURL=glideOut.js.map