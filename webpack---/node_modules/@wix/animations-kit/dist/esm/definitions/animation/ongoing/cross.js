import {
    __rest
} from "tslib";
import {
    getOutOfScreenDistance
} from '../../../utils/animationsUtils';
const name = 'Cross';
const properties = {
    schema: {},
};
const crossingAngles = {
    left: {
        from: 0,
        to: 180
    },
    'top-left': {
        from: 45,
        to: 225
    },
    top: {
        from: 90,
        to: 270
    },
    'top-right': {
        from: 135,
        to: 315
    },
    right: {
        from: 180,
        to: 0
    },
    'bottom-right': {
        from: 225,
        to: 45
    },
    bottom: {
        from: 270,
        to: 90
    },
    'bottom-left': {
        from: 315,
        to: 135
    },
};
/**
 * Cross animation object
 */
function animate(kit, elements, duration, delay, _a) {
    var {
        direction = 'right'
    } = _a, params = __rest(_a, ["direction"]);
    const sequence = kit.sequence(params);
    elements.forEach((element) => {
        const parentRect = kit.engine.getBoundingRect(element.offsetParent);
        const compRect = kit.engine.getBoundingRect(element);
        const {
            distance: distIn,
            x: travelFromX,
            y: travelFromY,
        } = getOutOfScreenDistance(parentRect, compRect, crossingAngles[direction].from);
        const {
            distance: distOut,
            x: travelToX,
            y: travelToY,
        } = getOutOfScreenDistance(parentRect, compRect, crossingAngles[direction].to);
        const durationOut = (distOut / (distOut + distIn)) * duration;
        const durationIn = (distIn / (distOut + distIn)) * duration;
        sequence
            .add(kit.animate('BasePosition', element, durationOut, 0, {
                to: {
                    x: travelToX,
                    y: travelToY,
                },
                ease: 'linear',
            }))
            .add(kit.engine.set(element, {
                x: travelFromX,
                y: travelFromY,
            }))
            .add(kit.animate('BasePosition', element, durationIn, 0, {
                to: {
                    x: 0,
                    y: 0,
                },
                ease: 'linear',
            }))
            .add(kit.animate('BaseNone', element, delay, 0)); // add repeat delay
    });
    return sequence.get();
}
export {
    name,
    properties,
    animate
};
//# sourceMappingURL=cross.js.map