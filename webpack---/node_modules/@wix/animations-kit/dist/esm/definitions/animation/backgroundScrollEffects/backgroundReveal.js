import {
    __rest
} from "tslib";
import {
    REVEAL_SELECTORS
} from './balataConsts';
const name = 'BackgroundReveal';
const properties = {
    hideOnStart: false,
    requestFullScreenHeight: true,
    shouldDisableSmoothScrolling: true,
    getMaxTravel(elementMeasure, viewportHeight) {
        return viewportHeight + elementMeasure.height;
    },
    groups: ['animation', 'background', 'legacy'],
    schema: {
        duration: {
            type: 'number',
            min: 0,
            default: 0,
        },
        delay: {
            type: 'number',
            min: 0,
            default: 0,
        },
        viewPortHeight: {
            type: 'number',
            min: 0,
            default: 1,
        },
        browserFlags: {
            type: 'object',
        },
        componentHeight: {
            type: 'number',
            min: 0,
            default: 1,
        },
    },
};
/**
 * BackgroundReveal animation.
 */
function animate(kit, elements, duration, delay, _a = {}) {
    var {
        viewPortHeight = 1, browserFlags = {}, componentHeight = 1
    } = _a, params = __rest(_a, ["viewPortHeight", "browserFlags", "componentHeight"]);
    const sequence = kit.sequence(params);
    let childrenToAnimate;
    if (browserFlags.animateRevealScrubAction) {
        // fixed layers on IE and Edge jitter while scrolling , we're animating the layers for steady reveal.
        elements.forEach((element) => {
            childrenToAnimate = REVEAL_SELECTORS.map((selector) => element.querySelector(selector)).filter(Boolean);
            sequence.add([
                kit.animate('BasePosition', element, duration, delay, {
                    from: {
                        y: viewPortHeight
                    },
                    to: {
                        y: -componentHeight
                    },
                    force3D: true,
                    immediateRender: true,
                }),
                kit.animate('BasePosition', childrenToAnimate, duration, delay, {
                    from: {
                        y: -viewPortHeight
                    },
                    to: {
                        y: componentHeight
                    },
                    force3D: true,
                    immediateRender: true,
                }),
            ]);
        });
    } else {
        // no animation , just force 3d layering
        elements.forEach((element) => {
            childrenToAnimate = REVEAL_SELECTORS.map((selector) => element.querySelector(selector)).filter(Boolean);
            sequence.add([
                kit.animate('BaseNone', elements, 0, 0, {
                    transformStyle: 'preserve-3d',
                    force3D: true,
                }),
                kit.animate('BaseNone', childrenToAnimate, 0, 0, {
                    transformStyle: 'preserve-3d',
                    force3D: true,
                }),
            ]);
        });
    }
    return sequence.get();
}
export {
    name,
    properties,
    animate
};
//# sourceMappingURL=backgroundReveal.js.map