import {
    __rest
} from "tslib";
import {
    keyframesToDuration,
    mapRange
} from '../../../utils/animationsUtils';
const name = 'Poke';
const properties = {
    schema: {},
};
const keyframes_translate = [{
        keyframe: 17,
        translate: 7
    },
    {
        keyframe: 32,
        translate: 25
    },
    {
        keyframe: 48,
        translate: 8
    },
    {
        keyframe: 56,
        translate: 11
    },
    {
        keyframe: 66,
        translate: 25
    },
    {
        keyframe: 83,
        translate: 4
    },
    {
        keyframe: 100,
        translate: 0
    },
];
const powerMap = {
    soft: {
        pokeFactor: 1
    },
    medium: {
        pokeFactor: 2
    },
    hard: {
        pokeFactor: 4
    },
};
const directionMap = {
    top: {
        transformAxis: 'y',
        transformDirection: -1
    },
    bottom: {
        transformAxis: 'y',
        transformDirection: 1
    },
    right: {
        transformAxis: 'x',
        transformDirection: 1
    },
    left: {
        transformAxis: 'x',
        transformDirection: -1
    },
};
/**
 * Poke animation object
 */
function animate(kit, elements, duration, delay, _a = {}) {
    var {
        power,
        intensity = 0.5,
        direction = 'right'
    } = _a, params = __rest(_a, ["power", "intensity", "direction"]);
    const sequence = kit.sequence(params);
    const {
        transformAxis,
        transformDirection
    } = directionMap[direction];
    const durations = keyframesToDuration(keyframes_translate, duration);
    const responsivePokeFactor = mapRange(0, 1, powerMap.soft.pokeFactor, powerMap.hard.pokeFactor, intensity);
    const pokeFactor = typeof power !== 'undefined' ?
        powerMap[power].pokeFactor :
        responsivePokeFactor;
    keyframes_translate.forEach(({
        translate
    }, index) => {
        sequence.add(kit.animate('BasePosition', elements, durations[index], 0, {
            to: {
                [transformAxis]: translate * pokeFactor * transformDirection,
            },
        }));
    });
    sequence.add(kit.animate('BaseNone', elements, delay, 0)); // add repeat delay
    return sequence.get();
}
export {
    name,
    properties,
    animate
};
//# sourceMappingURL=poke.js.map