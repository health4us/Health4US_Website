import {
    mapRange,
    circInOut
} from '@wix/wow-utils';
import {
    getCssUnits,
    getMouseTransitionEasing,
} from '../../../utils/animationsUtils';
export const name = 'SkewMouse';
export const properties = {
    schema: {},
};
export function animate(_kit, elements, _duration, _delay, {
    inverted = false,
    distance = {
        value: 200,
        type: 'px'
    },
    angle = 25,
    axis = 'both',
    transitionDuration,
    transitionEasing = 'linear',
} = {}) {
    const element = elements[0];
    const invert = inverted ? -1 : 1;
    if (transitionDuration) {
        element.style.transition = `transform ${transitionDuration}ms ${getMouseTransitionEasing(transitionEasing)}`;
    }
    return {
        progress({
            x: progressX,
            y: progressY
        }) {
            let translateX = 0;
            let translateY = 0;
            let skewX = 0;
            let skewY = 0;
            // distance
            if (axis !== 'vertical') {
                translateX =
                    mapRange(0, 1, -distance.value, distance.value, progressX) * invert;
                skewX = mapRange(0, 1, angle, -angle, progressX) * invert;
            }
            if (axis !== 'horizontal') {
                translateY =
                    mapRange(0, 1, -distance.value, distance.value, progressY) * invert;
                skewY = mapRange(0, 1, angle, -angle, progressY) * invert;
            }
            if (axis === 'both') {
                // We want to do `skewX *= progressY < 0.5 ? 1 : -1`
                // but normalize it by y progress (so it will be 0 when y is 0.5)
                // and apply a circInOut easing on the progress so it will feel more natural
                skewX *= mapRange(0, 1, 1, -1, circInOut(progressY));
                // we want to do `skewY *= progressX < 0.5 ? 1 : -1`
                // but normalize it by x progress (so it will be 0 when x is 0.5)
                // and apply a circInOut easing on the progress so it will feel more natural
                skewY *= mapRange(0, 1, 1, -1, circInOut(progressX));
            }
            const units = getCssUnits(distance.type);
            const transform = `translateX(${translateX}${units}) translateY(${translateY}${units}) skew(${skewX}deg, ${skewY}deg) rotate(var(--comp-rotate-z, 0deg))`;
            element.style.transform = transform;
        },
        kill() {
            element.style.transform = '';
            element.style.transition = '';
        },
    };
}
//# sourceMappingURL=skewMouse.js.map