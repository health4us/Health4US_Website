import {
    __rest
} from "tslib";
import {
    getClipParams,
    getAdjustedDirection,
    getTransformTweenParams,
} from '../../../../utils/animationsUtils';
import {
    deg2rad
} from '@wix/wow-utils';
const name = 'TiltIn';
const properties = {
    schema: {}
};
const paramsMap = {
    // pseudoLeft: { rotationZ: -60, idx: 0 },
    left: {
        rotationZ: '+=30',
        idx: 0
    },
    // pseudoRight: { rotationZ: 60, idx: 2 },
    right: {
        rotationZ: '-=30',
        idx: 1
    },
};

function animate(kit, elements, duration, delay, _a = {}) {
    var {
        direction = 'left', easing = 'cubicOut'
    } = _a, params = __rest(_a, ["direction", "easing"]);
    const sequence = kit.sequence(params);
    sequence.add(kit.animate('BaseFade', elements, duration * 0.2, delay, {
        from: {
            opacity: 0
        },
        to: {
            opacity: 1
        },
        ease: 'cubicOut',
    }));
    elements.forEach((element) => {
        const compRect = kit.engine.getBoundingRect(element);
        const contentRect = kit.engine.getBoundingContentRect(element);
        const elementAngleInDeg = Number(kit.engine.getProperty(element, '--comp-rotate-z') || 0);
        const adjDirection = getAdjustedDirection(paramsMap, direction, elementAngleInDeg);
        const position = getTransformTweenParams(contentRect, {
            dx: 0,
            dy: 1
        }, deg2rad(elementAngleInDeg), 0.2);
        const {
            rotationZ
        } = paramsMap[adjDirection];
        const clip = getClipParams(compRect, contentRect, 'top', {
            minimum: 0,
        });
        sequence.add(kit.engine.set(element, {
            transformPerspective: 800,
            transformOrigin: `50% 50% -${contentRect.height / 2}px`,
        }), 0);
        sequence.add([
            kit.animate('BaseClipPath', element, duration * 0.8, delay, {
                from: clip,
                ease: easing,
            }),
            kit.animate('BaseRotate3D', element, duration * 0.8, delay, {
                from: {
                    rotationZ
                },
                ease: easing,
            }),
            kit.animate('BaseRotate3D', element, duration, delay, {
                from: {
                    rotationX: -90
                },
                ease: easing,
            }),
            kit.animate('BasePosition', element, duration, delay, {
                from: position,
                ease: easing,
            }),
        ], 0);
    });
    return sequence.get();
}
export {
    name,
    properties,
    animate
};
//# sourceMappingURL=tiltIn.js.map