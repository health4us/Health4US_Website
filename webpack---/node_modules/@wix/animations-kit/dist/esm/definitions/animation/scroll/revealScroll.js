import {
    __rest
} from "tslib";
import {
    getAdjustedDirection,
    getClipParams,
} from '../../../utils/animationsUtils';
const name = 'RevealScroll';
const properties = {
    schema: {},
};
const paramsMap = {
    top: {
        dx: 0,
        dy: -1,
        idx: 0,
        clip: 'bottom'
    },
    right: {
        dx: 1,
        dy: 0,
        idx: 1,
        clip: 'left'
    },
    bottom: {
        dx: 0,
        dy: 1,
        idx: 2,
        clip: 'top'
    },
    left: {
        dx: -1,
        dy: 0,
        idx: 3,
        clip: 'right'
    },
};
const oppositeDirections = {
    top: 'bottom',
    bottom: 'top',
    left: 'right',
    right: 'left',
};
const ease = 'linear';
const rangeValues = { in: (clipFrom, _clipTo) => [{
        fromValue: clipFrom,
        toValue: ''
    }, ],
    out: (clipFrom, _clipTo) => [{
        fromValue: '',
        toValue: clipFrom
    }, ],
    continuous: (clipFrom, clipTo) => [{
            fromValue: clipFrom,
            toValue: ''
        },
        {
            fromValue: '',
            toValue: clipTo
        },
    ],
};
/**
 * RevealScroll
 */
function animate(kit, elements, _duration, _delay, _a = {}) {
    var {
        direction = 'bottom', range = 'in'
    } = _a, params = __rest(_a, ["direction", "range"]);
    const sequence = kit.sequence(params);
    elements.forEach((element) => {
        const compRect = kit.engine.getBoundingRect(element);
        const contentRect = kit.engine.getBoundingContentRect(element);
        const elementAngleInDeg = Number(kit.engine.getProperty(element, '--comp-rotate-z') || 0);
        const adjDirection = getAdjustedDirection(paramsMap, direction, elementAngleInDeg);
        const clipFrom = getClipParams(compRect, contentRect, paramsMap[adjDirection].clip);
        const clipTo = getClipParams(compRect, contentRect, paramsMap[oppositeDirections[adjDirection]].clip);
        const scenes = rangeValues[range](clipFrom, clipTo);
        scenes.forEach(({
            fromValue,
            toValue
        }) => sequence.add(kit.animate('BaseClipPath', element, 1000, 0, {
            from: fromValue,
            to: toValue,
            ease,
        })));
    });
    return sequence.get();
}
export {
    name,
    properties,
    animate
};
//# sourceMappingURL=revealScroll.js.map