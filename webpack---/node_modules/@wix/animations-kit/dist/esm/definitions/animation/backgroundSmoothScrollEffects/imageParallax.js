import {
    __rest
} from "tslib";
const HEIGHT_FACTOR = 1.5;
const name = 'ImageParallax';
const properties = {
    hideOnStart: false,
    getMediaDimensions(width, height) {
        return {
            width,
            height: height * HEIGHT_FACTOR
        };
    },
    groups: ['animation', 'background'],
    schema: {
        duration: {
            type: 'number',
            min: 0,
            default: 0,
        },
        delay: {
            type: 'number',
            min: 0,
            default: 0,
        },
        componentHeight: {
            type: 'number',
            min: 0,
        },
        viewPortHeight: {
            type: 'number',
            min: 0,
        },
        speedFactor: {
            type: 'number',
            default: -0.5,
        },
    },
};

function animate(kit, elements, duration, delay, _a = {}) {
    var {
        componentHeight,
        componentTop,
        siteHeight,
        viewPortHeight,
        speedFactor = properties.schema.speedFactor.default
    } = _a, params = __rest(_a, ["componentHeight", "componentTop", "siteHeight", "viewPortHeight", "speedFactor"]);
    const sequence = kit.sequence(params);
    const to = 0;
    const from = componentHeight - HEIGHT_FACTOR * componentHeight;
    sequence.add(kit.animate('BasePosition', elements, duration, delay, {
        ease: 'none',
        from: {
            y: from
        },
        to: {
            y: to
        },
    }));
    return sequence.get();
}
export {
    name,
    properties,
    animate
};
//# sourceMappingURL=imageParallax.js.map