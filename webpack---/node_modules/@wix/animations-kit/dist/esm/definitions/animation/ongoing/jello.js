import {
    __rest
} from "tslib";
import {
    keyframesToDuration,
    mapRange
} from '../../../utils/animationsUtils';
const name = 'Jello';
const properties = {
    schema: {},
};
const keyframes_skewY = [{
        keyframe: 24,
        skewY: 7
    },
    {
        keyframe: 38,
        skewY: -2
    },
    {
        keyframe: 58,
        skewY: 4
    },
    {
        keyframe: 80,
        skewY: -2
    },
    {
        keyframe: 100,
        skewY: 0
    },
];
const powerMap = {
    soft: {
        jelloFactor: 1
    },
    medium: {
        jelloFactor: 2
    },
    hard: {
        jelloFactor: 4
    },
};
/**
 * Jello animation object
 */
function animate(kit, elements, duration, delay, _a = {}) {
    var {
        power,
        intensity = 0.25
    } = _a, params = __rest(_a, ["power", "intensity"]);
    const sequence = kit.sequence(params);
    const durations = keyframesToDuration(keyframes_skewY, duration);
    const responsiveJelloFactor = mapRange(0, 1, powerMap.soft.jelloFactor, powerMap.hard.jelloFactor, intensity);
    const jelloFactor = typeof power !== 'undefined' ?
        powerMap[power].jelloFactor :
        responsiveJelloFactor;
    keyframes_skewY.forEach(({
        skewY
    }, index) => {
        sequence.add(kit.animate('BaseSkew', elements, durations[index], 0, {
            to: {
                skewY: `${skewY * jelloFactor}deg`
            },
        }));
    });
    sequence.add(kit.animate('BaseNone', elements, delay, 0)); // add repeat delay
    return sequence.get();
}
export {
    name,
    properties,
    animate
};
//# sourceMappingURL=jello.js.map