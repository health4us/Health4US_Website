import {
    __rest
} from "tslib";
const name = 'BlurScroll';
const properties = {
    schema: {},
};
const blurMap = {
    soft: {
        blur: 6
    },
    medium: {
        blur: 25
    },
    hard: {
        blur: 50
    },
};
const ease = 'linear';
const rangeValues = { in: (blurFactor) => ({
        fromValue: blurFactor,
        toValue: 0
    }),
    out: (blurFactor) => ({
        fromValue: 0,
        toValue: blurFactor
    }),
};
/**
 * Blur Scroll
 */
function animate(kit, elements, _duration, _delay, _a = {}) {
    var {
        blur = 6, power, range = 'in'
    } = _a, params = __rest(_a, ["blur", "power", "range"]);
    const sequence = kit.sequence(params);
    const blurFactor = typeof power !== 'undefined' ? blurMap[power].blur : blur;
    const {
        fromValue,
        toValue
    } = rangeValues[range](blurFactor);
    sequence.add(kit.animate('BaseFilter', elements, 1000, 0, {
        from: {
            filter: `blur(${fromValue}px)`
        },
        to: {
            filter: `blur(${toValue}px)`
        },
        ease,
    }));
    return sequence.get();
}
export {
    name,
    properties,
    animate
};
//# sourceMappingURL=blurScroll.js.map