import {
    __rest
} from "tslib";
const name = 'ShapeIn';
const properties = {
    schema: {}
};
const shapes = {
    diamond: {
        start: 'polygon(50% 50%, 50% 50%, 50% 50%, 50% 50%)',
        end: 'polygon(50% -50%, 150% 50%, 50% 150%, -50% 50%)',
    },
    window: {
        start: 'inset(50% round 50% 50% 0% 0%)',
        end: 'inset(-20% round 50% 50% 0% 0%)',
    },
    rectangle: {
        start: 'inset(50%)',
        end: 'inset(0%)'
    },
    circle: {
        start: 'circle(0%)',
        end: 'circle(75%)'
    },
    ellipse: {
        start: 'ellipse(0% 0%)',
        end: 'ellipse(75% 75%)'
    },
};

function animate(kit, elements, duration, delay, _a = {}) {
    var {
        direction = 'center', easing = 'cubicInOut', shape = 'rectangle'
    } = _a, params = __rest(_a, ["direction", "easing", "shape"]);
    const sequence = kit.sequence(params);
    const {
        start,
        end
    } = shapes[shape];
    sequence.add([
        kit.animate('BaseFade', elements, duration * 0.8, delay, {
            from: {
                opacity: 0
            },
            to: {
                opacity: 1
            },
            ease: 'quadOut',
        }),
        kit.animate('BaseClipPath', elements, duration, delay, {
            from: {
                webkitClipPath: start,
                clipPath: start,
            },
            to: {
                webkitClipPath: end,
                clipPath: end,
            },
            ease: easing,
        }),
    ]);
    return sequence.get();
}
export {
    name,
    properties,
    animate
};
//# sourceMappingURL=shapeIn.js.map