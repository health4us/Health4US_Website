import {
    __rest
} from "tslib";
const name = 'ParallaxScroll';
const properties = {
    schema: {},
};
const ease = 'linear';
const DEFAULT_SPEED = 0.5;
/**
 * Parallax Scroll
 */
function animate(kit, elements, _duration, _delay, _a = {}) {
    var {
        speed = DEFAULT_SPEED
    } = _a, params = __rest(_a, ["speed"]);
    const sequence = kit.sequence(params);
    // only 'continuous' and 0%-100% of range
    sequence.add(kit.animate('BasePosition', elements, 1000, 0, {
        from: {
            y: `${-50 * speed}vh`
        },
        to: {
            y: `${50 * speed}vh`
        },
        ease,
    }));
    return sequence.get();
}

function getOffsetAdd(factor, speed) {
    return `${100 * factor * speed}vh`;
}
const api = {
    getScrubOffsets({
        speed = DEFAULT_SPEED
    }) {
        const start = getOffsetAdd(-0.5, speed);
        const end = getOffsetAdd(0.5, speed);
        return {
            start,
            end,
        };
    },
};
export {
    name,
    properties,
    animate,
    api
};
//# sourceMappingURL=parallaxScroll.js.map