import {
    __rest
} from "tslib";
import {
    getCssUnits
} from '../../../../utils/animationsUtils';
const name = 'GrowIn';
const properties = {
    schema: {},
};
const powerMap = {
    soft: {
        scale: 0.8
    },
    medium: {
        scale: 0.6
    },
    hard: {
        scale: 0
    },
};

function animate(kit, elements, duration, delay, _a = {}) {
    var {
        power,
        initialScale = 0,
        distance = {
            value: 120,
            type: 'percentage'
        },
        direction = 0,
        easing = 'cubicInOut'
    } = _a, params = __rest(_a, ["power", "initialScale", "distance", "direction", "easing"]);
    const sequence = kit.sequence(params);
    const scale = typeof power !== 'undefined' ? powerMap[power].scale : initialScale;
    const angleInRad = (direction * Math.PI) / 180;
    const unit = getCssUnits(distance.type);
    sequence.add(kit.animate('BaseFade', elements, 0, 0, {
        to: {
            opacity: 0.01
        }
    }));
    sequence.add([
        kit.animate('BaseFade', elements, duration, delay, {
            to: {
                opacity: 1
            },
        }),
        kit.animate('BaseScale', elements, duration, delay, {
            from: {
                scale
            },
            ease: easing,
        }),
        kit.animate('BasePosition', elements, duration, delay, {
            from: {
                x: `${Math.sin(angleInRad) * distance.value}${unit}`,
                y: `${Math.cos(angleInRad) * distance.value * -1}${unit}`,
            },
            ease: easing,
        }),
    ]);
    return sequence.get();
}
export {
    name,
    properties,
    animate
};
//# sourceMappingURL=growIn.js.map