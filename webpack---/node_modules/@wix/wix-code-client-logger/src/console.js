'use strict'

const noop_ = require('lodash/noop')
const isError_ = require('lodash/isError')
const {
    union
} = require('@wix/wix-code-adt')

const consoleHandlerCreator = ({
    shouldLog,
    ignoredErrorMessages: _ignoredErrorMessages = []
} = {}) => {
    let ignoredErrorMessages = _ignoredErrorMessages.slice()

    const isErrorMessageIgnored = errorMessage =>
        ignoredErrorMessages.some(
            ignoredErrorMessage => errorMessage === ignoredErrorMessage
        )

    const writeToConsole = (originalMessage, fullMessage) => {
        if (!isErrorMessageIgnored(originalMessage)) {
            console.error(fullMessage) // eslint-disable-line no-console
        }
    }

    const consoleHandler = () => ({
        init: () => {},
        log: logEvent => {
            logEvent.matchWith({
                Warn: ({
                    message: messageOrError
                }) => {
                    if (shouldLog()) {
                        const [error, finalMessage] = isError_(messageOrError) ?
                            [messageOrError, messageOrError.message] :
                            [new Error(messageOrError), messageOrError]
                        writeToConsole(finalMessage, error.stack)
                    }
                },
                Error: ({
                    error
                }) => {
                    if (shouldLog()) {
                        const errorMessage = error.message ? error.message : error
                        const errorStack = error.stack ? error.stack : error
                        writeToConsole(errorMessage, errorStack)
                    }
                },
                [union.any]: noop_
            })
        }
    })

    const setIgnoredErrorMessages = _ignoredErrorMessages => {
        ignoredErrorMessages = _ignoredErrorMessages.slice()
    }

    return {
        setIgnoredErrorMessages,
        consoleHandler
    }
}

module.exports.consoleHandlerCreator = consoleHandlerCreator