'use strict'

const identity_ = require('lodash/identity')
const baseParams = require('./baseParams')
const getAppVersion = require('../getAppVersion')
const {
    getAppUrl
} = require('../worker/getUrl')
const shouldSendReport = require('./shouldSendReport')

module.exports = ({
    Raven,
    appName,
    browserUrlGetter,
    dsn,
    params
}) => {
    const appUrl = getAppUrl(appName)
    const appVersion = getAppVersion(appUrl)

    // do not install(), we want to control the error reporting ourselves
    // instead of Raven hooking to everything
    Raven.config(
        dsn,
        Object.assign({}, baseParams, {
            captureUnhandledRejections: false,
            autoBreadcrumbs: {
                dom: false
            }
        })
    )

    Raven.setRelease(params.release || appVersion)

    Raven.setShouldSendCallback(params.shouldSendCallback || shouldSendReport)

    Raven.setDataCallback((data, originalCallback = identity_) => {
        //in a worker raven does not set this required field which leads to sentry bugs
        data.request = Object.assign(data.request || {}, {
            url: browserUrlGetter()
        })

        return originalCallback(data)
    })

    const cleanup = () => {
        Raven.setDataCallback(identity_)
    }

    return cleanup
}