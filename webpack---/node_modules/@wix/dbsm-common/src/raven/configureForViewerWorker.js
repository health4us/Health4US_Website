'use strict'

const identity_ = require('lodash/identity')
const {
    Result
} = require('@wix/wix-code-adt')
const configureRaven = require('./configureForWorker')
const {
    isLocalhost
} = require('../worker/getUrl')

const getSantaVersionFromWorkerUrl = workerUrl => {
    const santaVersionMatch = workerUrl.match(/santa\/([^/]*)/)
    return santaVersionMatch ? santaVersionMatch[1] : 'unknown'
}

const tryOrGetUnknown = callback => Result.try(callback).getOrElse('unknown')
const tryOrGetError = callback =>
    Result.try(callback).fold(
        error => error.message,
        v => v
    )

const getExtraDebugData = globalScope => ({
    referrer: tryOrGetError(() => globalScope['wix-window'].referrer),
    workerUrl: tryOrGetError(() => globalScope.location.href)
})

const getTags = globalScope => ({
    renderMode: tryOrGetUnknown(() => globalScope['wix-window'].rendering.env),
    viewMode: tryOrGetUnknown(() => globalScope['wix-window'].viewMode),
    santaVersion: tryOrGetUnknown(() =>
        getSantaVersionFromWorkerUrl(globalScope.location.href)
    )
})

const configureForViewerWorker = ({
    Raven,
    globalScope,
    dsn,
    params = {},
    appName
}) => {
    if (isLocalhost()) {
        return
    }

    configureRaven({
        Raven,
        appName,
        browserUrlGetter: () =>
            tryOrGetUnknown(() => globalScope['wix-location'].url),
        dsn,
        params
    })

    Raven.setDataCallback((data, originalCallback = identity_) => {
        data.extra = Object.assign(data.extra || {}, getExtraDebugData(globalScope))
        data.tags = Object.assign(
            data.tags || {},
            params.tags || {},
            getTags(globalScope)
        )

        return originalCallback(data)
    })
}

module.exports.configureForViewerWorker = configureForViewerWorker