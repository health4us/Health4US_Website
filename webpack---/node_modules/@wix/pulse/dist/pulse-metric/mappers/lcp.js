export const toLcpMetric = (metric, getHtmlElementMetadata) => {
    const {
        value,
        attribution
    } = metric;
    const {
        lcpEntry,
        url: lcpUrl
    } = attribution;
    const htmlElementMetadata = getHtmlElementMetadata(lcpEntry ? .element);
    // https://github.com/wix-private/wix-perf-measure/blob/master/packages/wix-perf-measure/src/entries/lcp.js#L92C3-L94C61
    // In case it's an image, we want to extract the content type from the URL
    const m = /\.(jpe?g|png|gif|svg|webp)/i.exec(lcpUrl || '');
    const lcpContentType = m ? .[1] ? .toLowerCase().replace('jpeg', 'jpg') || 'other';
    // https://github.com/wix-private/wix-perf-measure/blob/master/packages/wix-perf-measure/src/entries/lcp.js#L96
    return {
        lcp: Math.trunc(value),
        lcpSize: lcpEntry ? .size ? Math.trunc(lcpEntry.size) : undefined,
        lcpTag: lcpEntry ? .element ? .tagName,
        lcpRating: metric.rating,
        ...(lcpUrl && {
            lcpContentType
        }),
        lcpResourceLoadDelay: Math.trunc(attribution.resourceLoadDelay),
        lcpResourceLoadTime: Math.trunc(attribution.resourceLoadTime),
        lcpElementRenderDelay: Math.trunc(attribution.elementRenderDelay),
        ...(lcpUrl && {
            lcpUrl
        }),
        lcpInitiatorType: attribution.lcpResourceEntry ? .initiatorType,
        ...(htmlElementMetadata.compType && {
            lcpComponentType: htmlElementMetadata.compType,
        }),
        ...(htmlElementMetadata.widgetId && {
            lcpWidgetId: htmlElementMetadata.widgetId,
        }),
        ...(htmlElementMetadata.applicationId && {
            lcpApplicationId: htmlElementMetadata.applicationId,
        }),
        ...(attribution.lcpResourceEntry && {
            metadata: {
                lcpResourceRequestStart: attribution.lcpResourceEntry ? .requestStart,
                lcpResourceResponseStart: attribution.lcpResourceEntry ? .responseStart,
                lcpResourceTransferSize: attribution.lcpResourceEntry ? .transferSize,
                lcpResourceNetworkProtocol: attribution.lcpResourceEntry ? .nextHopProtocol,
                // @ts-expect-error - It's experimental so the type does not exist yet in TS https://developer.mozilla.org/en-US/docs/Web/API/PerformanceResourceTiming/deliveryType
                lcpResourceDeliveryType: attribution.lcpResourceEntry ? .deliveryType,
            },
        }),
    };
};
//# sourceMappingURL=lcp.js.map