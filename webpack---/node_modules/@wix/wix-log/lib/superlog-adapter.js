class SuperlogAdapter {
    constructor(superlog) {
        this._log = superlog;

        ['info', 'debug', 'trace', 'warn'].forEach(level => {
            this[level] = this._adapt.bind(this, level);
        });

        ['withRequest', 'withAspects', 'withData'].forEach(method => {
            this[method] = (...args) => new SuperlogAdapter(this._log[method](...args));
        });
    }

    _adapt(method, ...args) {
        if (args[0] && typeof args[0] === 'object') {
            args.unshift(args[0].message);
        }

        this._log[method](...args);
    }

    error(...args) {
        if (args[0] && typeof args[0] === 'object' && !(args[0] instanceof Error)) {
            args.unshift(args[0].message);
        }

        this._log.error(...args);
    }
}

module.exports = SuperlogAdapter;