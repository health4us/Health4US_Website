/**
 * Handle cases when developers pass object instead of instance of an Error
 * also errors like "Non-Error exception captured with keys: $id, detail, message, type"
 */
export function handleNonErrorException(exception) {
    var _a, _b;
    switch (true) {
        case 'message' in exception && (exception === null || exception === void 0 ? void 0 : exception.message):
            {
                return Object.assign(new Error(exception.message), exception);
            }
        case 'error' in exception && ((_a = exception === null || exception === void 0 ? void 0 : exception.error) === null || _a === void 0 ? void 0 : _a.message):
            {
                return Object.assign(new Error(exception.error.message), exception === null || exception === void 0 ? void 0 : exception.error);
            }
        case 'exception' in exception && ((_b = exception === null || exception === void 0 ? void 0 : exception.exception) === null || _b === void 0 ? void 0 : _b.message):
            {
                return Object.assign(new Error(exception.exception.message), exception === null || exception === void 0 ? void 0 : exception.exception);
            }
        default:
            {
                // only if we failed to overcome problem we warn about incorrect argument
                console.log('ErrorMonitor: please pass instance of an Error, instead error monitor received', exception);
                return exception;
            }
    }
}
//# sourceMappingURL=handleNonErrorException.js.map