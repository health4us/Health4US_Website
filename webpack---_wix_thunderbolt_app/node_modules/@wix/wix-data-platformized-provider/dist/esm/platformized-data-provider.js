import {
    __assign,
    __rest
} from "tslib";
import {
    handleJsonResponse,
    parseBulkError,
    handleJsonErrorResponse,
} from './platformized-data-response';
import {
    apiValidator,
    codes,
    validationError,
    messages,
    wixDataError,
} from '@wix/wix-data-errors';
import {
    serializeDates,
    isArray,
    isObject,
    isString,
    isDate,
    isNumber,
    toPlatformizedAggregate,
} from '@wix/wix-data-utils';
import {
    noopTraceWith
} from './trace-with';
var isProvider = function(candidate) {
    return typeof candidate === 'object' &&
        candidate !== null &&
        'get' in candidate &&
        typeof candidate.get === 'function';
};
var PlatformizedWixDataProvider = /** @class */ (function() {
    function PlatformizedWixDataProvider(_a) {
        var _b = _a.cloudDataUrl,
            cloudDataUrl = _b === void 0 ? '/_api/cloud-data' : _b,
            gridAppId = _a.gridAppId,
            segment = _a.segment,
            httpClient = _a.httpClient,
            authHeader = _a.authHeader,
            _c = _a.traceWith,
            traceWith = _c === void 0 ? noopTraceWith : _c;
        this.cloudDataUrl = cloudDataUrl;
        this.gridAppId = gridAppId;
        this.segment = segment;
        this.httpClientProvider =
            typeof httpClient === 'function' ? httpClient : function() {
                return httpClient;
            };
        this.traceWith = traceWith;
        this.authHeader = authHeader;
    }
    PlatformizedWixDataProvider.prototype.insert = function(collectionName, item, options) {
        var _this = this;
        return this._traceWith('platformized-provider-insert', {
            collectionName: collectionName,
        })(function() {
            return apiValidator()
                .collectionName(collectionName)
                .item(item, collectionName, false)
                .options(options)
                .validateAndReject()
                .then(function() {
                    return _this._post('/v1/wix-data/collections/insert', {
                        collectionName: collectionName,
                        item: item,
                        options: _this._optionsWithPlugins(options),
                    });
                });
        });
    };
    PlatformizedWixDataProvider.prototype.update = function(collectionName, item, options) {
        var _this = this;
        return this._traceWith('platformized-provider-update', {
            collectionName: collectionName,
        })(function() {
            return apiValidator()
                .collectionName(collectionName)
                .item(item, collectionName, false)
                .options(options)
                .validateAndReject()
                .then(function() {
                    return _this._post('/v1/wix-data/collections/update', {
                        collectionName: collectionName,
                        item: item,
                        options: _this._optionsWithPlugins(options),
                    });
                });
        });
    };
    PlatformizedWixDataProvider.prototype.save = function(collectionName, item, options) {
        var _this = this;
        return this._traceWith('platformized-provider-save', {
            collectionName: collectionName,
        })(function() {
            return apiValidator()
                .collectionName(collectionName)
                .item(item, collectionName, false)
                .options(options)
                .validateAndReject()
                .then(function() {
                    return _this._post('/v1/wix-data/collections/save', {
                        collectionName: collectionName,
                        item: item,
                        options: _this._optionsWithPlugins(options),
                    });
                });
        });
    };
    PlatformizedWixDataProvider.prototype.truncate = function(collectionName, options) {
        var _this = this;
        return this._traceWith('platformized-provider-truncate', {
            collectionName: collectionName,
        })(function() {
            return apiValidator()
                .collectionName(collectionName)
                .truncateOptions(options)
                .validateAndReject()
                .then(function() {
                    return _this._post('/v1/wix-data/collections/truncate', {
                        collectionName: collectionName,
                        options: _this._optionsWithPlugins(options),
                    });
                })
                .then(function() {
                    return Promise.resolve(null);
                });
        });
    };
    PlatformizedWixDataProvider.prototype.remove = function(collectionName, itemId, options) {
        var _this = this;
        return this._traceWith('platformized-provider-remove', {
            collectionName: collectionName,
        })(function() {
            return apiValidator()
                .collectionName(collectionName)
                .itemId(itemId)
                .options(options)
                .validateAndReject()
                .then(function() {
                    return _this._post('/v1/wix-data/collections/remove', {
                        collectionName: collectionName,
                        itemId: itemId,
                        options: _this._optionsWithPlugins(options),
                    });
                })
                .catch(function(err) {
                    if (err && err.code === codes.ItemDoesNotExist) {
                        return Promise.resolve(null);
                    }
                    return Promise.reject(err);
                });
        });
    };
    PlatformizedWixDataProvider.prototype.bulkRemove = function(collectionName, itemIds, options) {
        var _this = this;
        return this._traceWith('platformized-provider-bulk-remove', {
            collectionName: collectionName,
        })(function() {
            return apiValidator()
                .collectionName(collectionName)
                .itemIds(itemIds, collectionName)
                .bulkRemoveOptions(options)
                .validateAndReject()
                .then(function() {
                    if (itemIds.length === 0) {
                        return {
                            removedItemIds: [],
                            errors: [],
                        };
                    }
                    return _this._post('/v1/wix-data/collections/bulk-remove', {
                        collectionName: collectionName,
                        entries: itemIds.map(function(itemId) {
                            return ({
                                itemId: itemId
                            });
                        }),
                        options: _this._optionsWithPlugins(options),
                    });
                })
                .then(function(result) {
                    var removedItemIds = result.removedItemIds,
                        errors = result.errors;
                    return {
                        removedItemIds: removedItemIds,
                        removed: removedItemIds.length,
                        skipped: itemIds.length - removedItemIds.length - errors.length,
                        errors: errors.map(parseBulkError(itemIds)),
                    };
                })
                .catch(function(err) {
                    if (err && err.code === codes.ItemDoesNotExist) {
                        return Promise.resolve(null);
                    }
                    return Promise.reject(err);
                });
        });
    };
    PlatformizedWixDataProvider.prototype.get = function(collectionName, itemId, options) {
        var _this = this;
        return this._traceWith('platformized-provider-get', {
            collectionName: collectionName,
            itemId: itemId,
        })(function() {
            return apiValidator()
                .collectionName(collectionName)
                .itemId(itemId)
                .options(options)
                .validateAndReject()
                .then(function() {
                    return _this._post('/v1/wix-data/collections/get', {
                        collectionName: collectionName,
                        itemId: itemId,
                        options: _this._optionsWithPlugins(options),
                    });
                })
                .catch(function(err) {
                    if (err && err.code === codes.ItemDoesNotExist) {
                        return Promise.resolve(null);
                    }
                    return Promise.reject(err);
                });
        });
    };
    PlatformizedWixDataProvider.prototype.find = function(collectionName, filter, order, skip, limit, options, include, omitTotalCount, cursor, projectedFields) {
        var _this = this;
        return this._traceWith('platformized-provider-find', {
            collectionName: collectionName,
        })(function() {
            return apiValidator()
                .collectionName(collectionName)
                .options(options)
                .validateAndReject()
                .then(function() {
                    return _this._validateOrderBy(collectionName, order);
                })
                .then(function() {
                    return _this._validateFilter(collectionName, filter);
                })
                .then(function() {
                    return _this._post('/v1/wix-data/collections/query', {
                        collectionName: collectionName,
                        dataQuery: _this._getDataQuery(filter, order, limit, skip, cursor, projectedFields),
                        options: _this._optionsWithPlugins(options),
                        includeReferencedItems: include,
                        omitTotalCount: omitTotalCount,
                    });
                })
                .then(function(_a) {
                    var items = _a.items,
                        partialIncludes = _a.partialIncludes,
                        pagingMetadata = _a.pagingMetadata;
                    return {
                        items: items,
                        partialIncludes: partialIncludes,
                        totalCount: pagingMetadata.total,
                        pagingMetadata: pagingMetadata,
                    };
                });
        });
    };
    PlatformizedWixDataProvider.prototype.runAggregate = function(collectionName, pipeline, pageSize, options, cursor) {
        var _this = this;
        return this._traceWith('platformized-provider-aggregate', {
            collectionName: collectionName,
        })(function() {
            return apiValidator()
                .collectionName(collectionName)
                .options(options)
                .validateAndReject()
                .then(function() {
                    var platformizedPipeline = toPlatformizedAggregate(pipeline);
                    return _this._post('/v1/wix-data/collections/aggregate', __assign({
                        collectionName: collectionName,
                        initialFilter: platformizedPipeline.preFilteringStep,
                        aggregation: platformizedPipeline.processingStep,
                        finalFilter: platformizedPipeline.postFilteringStep,
                        sort: _this._platformizedSort(pipeline),
                        options: _this._optionsWithPlugins(options)
                    }, _this._getAggregatePaging(pipeline, pageSize, cursor))).then(function(aggregationResult) {
                        var items = aggregationResult.items,
                            _a = aggregationResult.pagingMetadata,
                            cursors = _a.cursors,
                            hasNext = _a.hasNext;
                        return {
                            items: items,
                            hasNext: hasNext,
                            cursors: cursors,
                        };
                    });
                });
        });
    };
    PlatformizedWixDataProvider.prototype._optionsWithPlugins = function(options) {
        var safeOptions = options || {};
        return safeOptions.showDrafts ?
            __assign(__assign({}, safeOptions), {
                pluginOptions: {
                    showDrafts: true
                }
            }) : safeOptions;
    };
    PlatformizedWixDataProvider.prototype._platformizedSort = function(pipeline) {
        var sortStage = pipeline.find(function(stage) {
            return stage.hasOwnProperty('$sort');
        });
        if (!sortStage) {
            return undefined;
        }
        var platformizedSort = sortStage.$sort.map(function(sortDefinition) {
            var _a = Object.entries(sortDefinition)[0],
                fieldName = _a[0],
                order = _a[1];
            return {
                fieldName: fieldName,
                order: order === 'asc' ? 0 : 1,
            };
        });
        return platformizedSort;
    };
    PlatformizedWixDataProvider.prototype._getDataQuery = function(filter, order, limit, skip, cursor, projectedFields) {
        return __assign(__assign({
            filter: filter,
            sort: order ? this._mapOrderToSort(order) : undefined
        }, this._getPaging(limit, skip, cursor)), {
            fields: projectedFields
        });
    };
    PlatformizedWixDataProvider.prototype._getAggregatePaging = function(pipeline, limit, cursor) {
        var skipStage = pipeline.find(function(stage) {
            return stage.hasOwnProperty('$skip');
        });
        var skip = skipStage !== undefined ? skipStage.$skip : undefined;
        return this._getPaging(limit, skip, cursor);
    };
    PlatformizedWixDataProvider.prototype._getPaging = function(limit, skip, cursor) {
        if (cursor && skip > 0) {
            throw wixDataError(messages.cursorPagingDoesNotSupportSkip(), codes.ValidationError);
        }
        if (cursor) {
            return {
                cursorPaging: {
                    limit: limit,
                    cursor: cursor,
                },
            };
        } else {
            return {
                paging: {
                    offset: skip,
                    limit: limit,
                },
            };
        }
    };
    PlatformizedWixDataProvider.prototype.count = function(collectionName, filter, options) {
        var _this = this;
        return this._traceWith('platformized-provider-count', {
            collectionName: collectionName,
        })(function() {
            return apiValidator()
                .collectionName(collectionName)
                .options(options)
                .validateAndReject()
                .then(function() {
                    return _this._validateFilter(collectionName, filter);
                })
                .then(function() {
                    return _this._post('/v1/wix-data/collections/count', {
                        collectionName: collectionName,
                        filter: filter,
                        options: _this._optionsWithPlugins(options),
                    });
                });
        });
    };
    PlatformizedWixDataProvider.prototype.distinct = function(collectionName, filter, order, fieldName, skip, limit, options, cursor, projectedFields, omitTotalCount) {
        var _this = this;
        return this._traceWith('platformized-provider-distinct', {
            collectionName: collectionName,
        })(function() {
            return apiValidator()
                .collectionName(collectionName)
                .options(options)
                .validateAndReject()
                .then(function() {
                    return _this._validateOrderBy(collectionName, order);
                })
                .then(function() {
                    return _this._validateFilter(collectionName, filter);
                })
                .then(function() {
                    return _this._post('/v1/wix-data/collections/distinct', {
                        collectionName: collectionName,
                        dataQuery: _this._getDataQuery(filter, order, limit, skip, cursor, projectedFields),
                        propertyName: fieldName,
                        options: _this._optionsWithPlugins(options),
                        omitTotalCount: omitTotalCount,
                    });
                })
                .then(function(_a) {
                    var items = _a.items,
                        pagingMetadata = _a.pagingMetadata;
                    return ({
                        items: items,
                        totalCount: pagingMetadata.total,
                        pagingMetadata: pagingMetadata,
                    });
                });
        });
    };
    PlatformizedWixDataProvider.prototype.bulkInsert = function(collectionName, items, options) {
        var _this = this;
        return this._traceWith('platformized-provider-bulk-insert', {
            collectionName: collectionName,
        })(function() {
            var overrideExisting = (options || {}).overrideExisting;
            return apiValidator()
                .collectionName(collectionName)
                .items(items, collectionName)
                .bulkInsertOptions(options)
                .validateAndReject()
                .then(function() {
                    if (items.length === 0) {
                        return {
                            insertedItemIds: [],
                            errors: [],
                        };
                    }
                    return _this._post('/v1/wix-data/collections/bulk-insert', {
                        collectionName: collectionName,
                        items: items,
                        options: _this._optionsWithPlugins(options),
                    });
                })
                .then(function(result) {
                    var insertedItemIds = result.insertedItemIds,
                        errors = result.errors;
                    return {
                        insertedItemIds: insertedItemIds,
                        inserted: insertedItemIds.length,
                        skipped: overrideExisting ?
                            0 :
                            items.length - insertedItemIds.length - errors.length,
                        updated: overrideExisting ?
                            items.length - insertedItemIds.length - errors.length :
                            0,
                        errors: errors.map(parseBulkError(items)),
                    };
                });
        });
    };
    PlatformizedWixDataProvider.prototype.bulkSave = function(collectionName, items, options) {
        var _this = this;
        return this._traceWith('platformized-provider-bulk-save', {
            collectionName: collectionName,
        })(function() {
            return apiValidator()
                .collectionName(collectionName)
                .items(items, collectionName)
                .bulkInsertOptions(options)
                .validateAndReject()
                .then(function() {
                    if (items.length === 0) {
                        return {
                            insertedItemIds: [],
                            updatedItemIds: [],
                            errors: [],
                        };
                    }
                    return _this._post('/v1/wix-data/collections/bulk-save', {
                        collectionName: collectionName,
                        items: items,
                        options: _this._optionsWithPlugins(options),
                    });
                })
                .then(function(result) {
                    var insertedItemIds = result.insertedItemIds,
                        updatedItemIds = result.updatedItemIds,
                        errors = result.errors;
                    return {
                        insertedItemIds: insertedItemIds,
                        updatedItemIds: updatedItemIds,
                        inserted: insertedItemIds.length,
                        skipped: items.length -
                            insertedItemIds.length -
                            updatedItemIds.length -
                            errors.length,
                        updated: updatedItemIds.length,
                        errors: errors.map(parseBulkError(items)),
                    };
                });
        });
    };
    PlatformizedWixDataProvider.prototype.bulkUpdate = function(collectionName, items, options) {
        var _this = this;
        return this._traceWith('platformized-provider-bulk-update', {
            collectionName: collectionName,
        })(function() {
            return apiValidator()
                .collectionName(collectionName)
                .items(items, collectionName)
                .bulkUpdateOptions(options)
                .validateAndReject()
                .then(function() {
                    if (items.length === 0) {
                        return {
                            updatedItemIds: [],
                            errors: [],
                        };
                    }
                    return _this._post('/v1/wix-data/collections/bulk-update', {
                        collectionName: collectionName,
                        items: items,
                        options: _this._optionsWithPlugins(options),
                    });
                })
                .then(function(result) {
                    var updatedItemIds = result.updatedItemIds,
                        errors = result.errors;
                    return {
                        updatedItemIds: updatedItemIds,
                        inserted: 0,
                        skipped: items.length - updatedItemIds.length - errors.length,
                        updated: updatedItemIds.length,
                        errors: errors.map(parseBulkError(items)),
                    };
                });
        });
    };
    PlatformizedWixDataProvider.prototype.queryReferenced = function(collectionName, holdingItem, propertyName, options) {
        var _this = this;
        return this._traceWith('platformized-provider-query-referenced', {
            collectionName: collectionName,
            order: options.order,
            skip: options.skip,
            limit: options.limit,
            cursorExists: options.cursor ? 'true' : 'false',
        })(function() {
            options = options || {};
            var order = (options.order || 'ASC').toUpperCase();
            var offset = options.skip || 0;
            var limit = options.limit || 50;
            var cursor = options.cursor;
            var omitTotalCount = options.omitTotalCount || false;
            return apiValidator()
                .collectionName(collectionName)
                .options(options)
                .validateAndReject()
                .then(function() {
                    return _this._post('/v1/wix-data/collections/query-referenced', __assign(__assign({
                        collectionName: collectionName,
                        propertyName: propertyName,
                        referringItemId: holdingItem,
                        order: order
                    }, _this._getPaging(limit, offset, cursor)), {
                        omitTotalCount: omitTotalCount,
                        options: _this._optionsWithPlugins(options)
                    }));
                })
                .then(function(_a) {
                    var items = _a.items,
                        pagingMetadata = _a.pagingMetadata;
                    return ({
                        items: items,
                        totalCount: pagingMetadata.total,
                        pagingMetadata: pagingMetadata,
                    });
                });
        });
    };
    PlatformizedWixDataProvider.prototype.insertReference = function(collectionName, relationshipName, left, right, options) {
        var _this = this;
        return this._traceWith('platformized-provider-insert-reference', {
            collectionName: collectionName,
        })(function() {
            return _this.insertReferences(collectionName, [{
                relationshipName: relationshipName,
                left: left,
                right: right
            }], options);
        });
    };
    PlatformizedWixDataProvider.prototype.insertReferences = function(collectionName, references, options) {
        var _this = this;
        return this._traceWith('platformized-provider-insert-references', {
            collectionName: collectionName,
        })(function() {
            return apiValidator()
                .collectionName(collectionName)
                .options(options)
                .validateAndReject()
                .then(function() {
                    return _this._post('/v1/wix-data/collections/bulk-insert-references', {
                        collectionName: collectionName,
                        references: references.map(function(_a) {
                            var relationshipName = _a.relationshipName,
                                left = _a.left,
                                right = _a.right;
                            return ({
                                propertyName: relationshipName,
                                referringItemId: left,
                                referencedItemId: right,
                            });
                        }),
                        options: _this._optionsWithPlugins(options),
                    });
                });
        });
    };
    PlatformizedWixDataProvider.prototype.replaceReferences = function(collectionName, query, newReferences, options) {
        var _this = this;
        return this._traceWith('platformized-provider-replace-references', {
            collectionName: collectionName,
        })(function() {
            return apiValidator()
                .collectionName(collectionName)
                .options(options)
                .validateAndReject()
                .then(function() {
                    return _this._post('/v1/wix-data/collections/bulk-replace-references', {
                        collectionName: collectionName,
                        propertyName: query.relationshipName,
                        referringItemId: query.left,
                        newReferencedItemIds: newReferences.map(function(_a) {
                            var right = _a.right;
                            return right;
                        }),
                        options: _this._optionsWithPlugins(options),
                    });
                });
        });
    };
    PlatformizedWixDataProvider.prototype.removeReference = function(collectionName, relationshipName, left, right, options) {
        var _this = this;
        return this._traceWith('platformized-provider-remove-reference', {
            collectionName: collectionName,
        })(function() {
            return _this.removeReferences(collectionName, [{
                relationshipName: relationshipName,
                left: left,
                right: right
            }], options);
        });
    };
    PlatformizedWixDataProvider.prototype.removeReferences = function(collectionName, references, options) {
        var _this = this;
        return this._traceWith('platformized-provider-remove-references', {
            collectionName: collectionName,
        })(function() {
            return apiValidator()
                .collectionName(collectionName)
                .options(options)
                .validateAndReject()
                .then(function() {
                    return _this._post('/v1/wix-data/collections/bulk-remove-references', {
                        collectionName: collectionName,
                        references: references.map(function(_a) {
                            var relationshipName = _a.relationshipName,
                                left = _a.left,
                                right = _a.right;
                            return ({
                                propertyName: relationshipName,
                                referringItemId: left,
                                referencedItemId: right,
                            });
                        }),
                        options: _this._optionsWithPlugins(options),
                    });
                });
        });
    };
    PlatformizedWixDataProvider.prototype.isReferenced = function(collectionName, propertyName, left, right, options) {
        var _this = this;
        return this._traceWith('platformized-provider-is-referenced', {
            collectionName: collectionName,
        })(function() {
            return apiValidator()
                .collectionName(collectionName)
                .options(options)
                .validateAndReject()
                .then(function() {
                    return _this._post('/v1/wix-data/collections/is-referenced', {
                        collectionName: collectionName,
                        propertyName: propertyName,
                        referringItemId: left,
                        referencedItemId: right,
                        options: _this._optionsWithPlugins(options),
                    });
                })
                .then(function(_a) {
                    var isReferenced = _a.isReferenced;
                    return isReferenced;
                });
        });
    };
    PlatformizedWixDataProvider.prototype._mapOrderToSort = function(order) {
        return order.flatMap(function(o) {
            return Object.entries(o).map(function(_a) {
                var key = _a[0],
                    value = _a[1];
                return ({
                    fieldName: key,
                    order: value.toUpperCase(),
                });
            });
        });
    };
    PlatformizedWixDataProvider.prototype._validateOrderBy = function(collectionName, order) {
        var isNotArray = function(elem) {
            return !isArray(elem);
        };
        var isNotObject = function(elem) {
            return !isObject(elem);
        };
        var isInvalidSort = function(elem) {
            var values = Object.values(elem);
            var isValid = values.length === 1 && (values[0] === 'asc' || values[0] === 'desc');
            return !isValid;
        };
        var nonArrayMessage = function(elem) {
            return messages.orderByValidations.sortModelType(elem);
        };
        var nonObjectMessage = function(elem) {
            return messages.orderByValidations.sortModelItemType(elem);
        };
        var invalidSortMessage = function(elem) {
            return messages.orderByValidations.sortModelItem(elem);
        };
        if ([null, undefined].includes(order)) {
            return Promise.resolve();
        }
        if (isNotArray(order)) {
            return Promise.reject(this._validationError(collectionName, [nonArrayMessage(order)]));
        }
        var errors = order.flatMap(function(elem) {
            if (isNotObject(elem)) {
                return nonObjectMessage(elem);
            }
            if (isInvalidSort(elem)) {
                return invalidSortMessage(elem);
            }
            return [];
        });
        return errors.length ?
            Promise.reject(this._validationError(collectionName, errors)) :
            Promise.resolve();
    };
    PlatformizedWixDataProvider.prototype._validateFilter = function(collectionName, filter) {
        var objectType = messages.filterTreeValidations.objectType;
        var arrayType = messages.filterTreeValidations.arrayType;
        var arrayLength = messages.filterTreeValidations.arrayLength;
        var comparisonOperatorType = messages.filterTreeValidations.comparisonOperatorType;
        var stringOperatorType = messages.filterTreeValidations.stringOperatorType;
        var setOperatorItems = messages.filterTreeValidations.setOperatorItems;
        var inOperatorItems = messages.filterTreeValidations.inOperatorItems;
        var matchesOperatorRequiredProperty = messages.filterTreeValidations.matchesOperatorRequiredProperty;
        var matchesOperatorIgnoreCase = messages.filterTreeValidations.matchesOperatorIgnoreCase;
        var matchesOperatorSpecItems = messages.filterTreeValidations.matchesOperatorSpecItems;
        var regexNotAllowed = messages.filterTreeValidations.regexNotAllowed;
        var objectTypeErrors = function(operatorName, value) {
            if (value === undefined) {
                return [];
            }
            if (isObject(value)) {
                return [];
            }
            return [objectType(operatorName, value)];
        };
        var arrayContainsNonObjectsErrors = function(operatorName, value) {
            if (!isArray(value)) {
                return [];
            }
            return value.flatMap(function(v) {
                return objectTypeErrors(operatorName, v);
            });
        };
        var nonArrayErrors = function(operatorName, value) {
            if (value === undefined) {
                return [];
            }
            if (isArray(value)) {
                return [];
            }
            return [arrayType(operatorName, value)];
        };
        var comparisonInvalidErrors = function(operatorName, value) {
            if (value === undefined) {
                return [];
            }
            if (isString(value) || isNumber(value) || isDate(value)) {
                return [];
            }
            return [comparisonOperatorType(operatorName, value)];
        };
        var nonStringOperatorErrors = function(operatorName, value) {
            if (value === undefined) {
                return [];
            }
            if (isString(value)) {
                return [];
            }
            return [stringOperatorType(operatorName, value)];
        };
        var nonSetOperatorErrors = function(operatorName, value) {
            var isSetOperator = function(elem) {
                return isDate(elem) || isString(elem) || isNumber(elem);
            };
            if (!isArray(value)) {
                return [];
            }
            if (value.every(isSetOperator)) {
                return [];
            }
            return [setOperatorItems(operatorName, value)];
        };
        var arrayLengthErrors = function(operatorName, value, expectedLength) {
            if (!isArray(value)) {
                return [];
            }
            if (value.length === expectedLength) {
                return [];
            }
            return [arrayLength(operatorName, expectedLength, value)];
        };
        var inOperatorItemErrors = function(value) {
            if (!isArray(value)) {
                return [];
            }
            if (value.length !== 2) {
                return [];
            }
            if (isString(value[0]) && isNumber(value[1])) {
                return [];
            }
            return [inOperatorItems(value)];
        };
        var matchesValidationErrors = function(value) {
            var isValidSpec = function(spec) {
                if (!isObject(spec)) {
                    return false;
                }
                if (spec.type === 'anyOf' && spec.value === ' \t\n-') {
                    return true;
                }
                if (spec.type === 'literal' && isString(spec.value)) {
                    return true;
                }
                return false;
            };
            if (!isObject(value)) {
                return [];
            }
            if (value.ignoreCase === undefined) {
                return [matchesOperatorRequiredProperty('ignoreCase', value)];
            }
            if (value.ignoreCase !== true) {
                return [matchesOperatorIgnoreCase(value.ignoreCase)];
            }
            if (value.spec === undefined) {
                return [matchesOperatorRequiredProperty('spec', value)];
            }
            if (!isArray(value.spec)) {
                return [arrayType('$matches.spec', value.spec)];
            }
            var invalidSpec = value.spec.find(function(spec) {
                return !isValidSpec(spec);
            });
            if (invalidSpec !== undefined) {
                return [matchesOperatorSpecItems(invalidSpec)];
            }
            return [];
        };
        var regexNotAllowedErrors = function(value) {
            if (value === undefined) {
                return [];
            }
            return [regexNotAllowed()];
        };
        var getErrors = function(filterRecords) {
            if (!isObject(filterRecords)) {
                return [];
            }
            var $and = filterRecords.$and,
                $or = filterRecords.$or,
                $not = filterRecords.$not,
                $gt = filterRecords.$gt,
                $gte = filterRecords.$gte,
                $lt = filterRecords.$lt,
                $lte = filterRecords.$lte,
                $startsWith = filterRecords.$startsWith,
                $endsWith = filterRecords.$endsWith,
                $contains = filterRecords.$contains,
                $hasSome = filterRecords.$hasSome,
                $hasAll = filterRecords.$hasAll,
                $in = filterRecords.$in,
                $matches = filterRecords.$matches,
                $regex = filterRecords.$regex,
                restOfFilter = __rest(filterRecords, ["$and", "$or", "$not", "$gt", "$gte", "$lt", "$lte", "$startsWith", "$endsWith", "$contains", "$hasSome", "$hasAll", "$in", "$matches", "$regex"]);
            var errors = []
                .concat(nonArrayErrors('$and', $and))
                .concat(arrayContainsNonObjectsErrors('Filter Model', $and))
                .concat(nonArrayErrors('$or', $or))
                .concat(arrayContainsNonObjectsErrors('Filter Model', $or))
                .concat(nonArrayErrors('$not', $not))
                .concat(arrayContainsNonObjectsErrors('Filter Model', $not))
                .concat(nonArrayErrors('$hasSome', $hasSome))
                .concat(nonArrayErrors('$hasAll', $hasAll))
                .concat(nonArrayErrors('$in', $in))
                .concat(nonSetOperatorErrors('$hasSome', $hasSome))
                .concat(nonSetOperatorErrors('$hasAll', $hasAll))
                .concat(comparisonInvalidErrors('$gt', $gt))
                .concat(comparisonInvalidErrors('$gte', $gte))
                .concat(comparisonInvalidErrors('$lt', $lt))
                .concat(comparisonInvalidErrors('$lte', $lte))
                .concat(nonStringOperatorErrors('$startsWith', $startsWith))
                .concat(nonStringOperatorErrors('$endsWith', $endsWith))
                .concat(nonStringOperatorErrors('$contains', $contains))
                .concat(arrayLengthErrors('$not', $not, 1))
                .concat(arrayLengthErrors('$in', $in, 2))
                .concat(inOperatorItemErrors($in))
                .concat(objectTypeErrors('$matches', $matches))
                .concat(matchesValidationErrors($matches))
                .concat(regexNotAllowedErrors($regex));
            if (errors.length) {
                return errors;
            }
            errors = []
                .concat($and ? $and.flatMap(getErrors) : [])
                .concat($or ? $or.flatMap(getErrors) : [])
                .concat($not ? $not.flatMap(getErrors) : []);
            if (errors.length) {
                return errors;
            }
            return Object.values(restOfFilter).flatMap(getErrors);
        };
        if ([null, undefined].includes(filter)) {
            return Promise.resolve();
        } else if (!isObject(filter)) {
            return Promise.reject(this._validationError(collectionName, [
                objectType('Filter Model', filter),
            ]));
        }
        var errors = getErrors(filter);
        return errors.length ?
            Promise.reject(this._validationError(collectionName, errors)) :
            Promise.resolve();
    };
    PlatformizedWixDataProvider.prototype._validationError = function(collectionName, invalidArguments) {
        return validationError(messages.queryValidations.queryInvalid(collectionName, invalidArguments));
    };
    PlatformizedWixDataProvider.prototype._getAuthHeader = function() {
        return Promise.resolve(isProvider(this.authHeader) ? this.authHeader.get() : this.authHeader);
    };
    PlatformizedWixDataProvider.prototype._post = function(path, body) {
        var _this = this;
        return Promise.all([this._getGridAppId(), this._getAuthHeader()]).then(function(_a) {
            var gridAppId = _a[0],
                authHeader = _a[1];
            return _this.traceWith('wix-data-api-call', {
                url: "".concat(_this.cloudDataUrl).concat(path),
                options: JSON.stringify(body.options),
            })(function() {
                var data = serializeDates(Object.assign(body, {
                    segment: _this.segment.toUpperCase(),
                    appId: gridAppId,
                }));
                var headers = authHeader ? {
                    authorization: authHeader
                } : {};
                return _this.httpClientProvider(body.options)
                    .post("".concat(_this.cloudDataUrl).concat(path), data, {
                        headers: headers
                    })
                    .catch(handleJsonErrorResponse(_this.traceWith))
                    .then(handleJsonResponse(_this.traceWith));
            });
        });
    };
    PlatformizedWixDataProvider.prototype._getGridAppId = function() {
        return Promise.resolve(isProvider(this.gridAppId) ? this.gridAppId.get() : this.gridAppId);
    };
    PlatformizedWixDataProvider.prototype._traceWith = function(methodName, options) {
        var _this = this;
        return function(fn) {
            return _this._getGridAppId().then(function(gridAppId) {
                return _this.traceWith(methodName, __assign({
                    gridAppId: gridAppId,
                    segment: _this.segment
                }, options))(fn);
            });
        };
    };
    return PlatformizedWixDataProvider;
}());
export {
    PlatformizedWixDataProvider
};
//# sourceMappingURL=platformized-data-provider.js.map