import getKind from 'kind-of';
export function isObject(obj) {
    return getKind(obj) === 'object';
}
export function isArray(arr) {
    return getKind(arr) === 'array';
}
export function isDate(obj) {
    return getKind(obj) === 'date';
}
export function isNumber(obj) {
    return getKind(obj) === 'number';
}
export function isBoolean(obj) {
    return getKind(obj) === 'boolean';
}
export function isString(obj) {
    return getKind(obj) === 'string';
}
export function isFunction(obj) {
    return getKind(obj) === 'function';
}
export function typeForDisplay(obj) {
    return upperCaseFirst(getKind(obj));
}
export function isUndefined(obj) {
    return getKind(obj) === 'undefined';
}
export function isNull(obj) {
    return getKind(obj) === 'null';
}

function upperCaseFirst(str) {
    if (!isString(str)) {
        return str;
    }
    var first = str.slice(0, 1).toUpperCase();
    var rest = str.slice(1, str.length);
    return first + rest;
}
//# sourceMappingURL=type-utils.js.map