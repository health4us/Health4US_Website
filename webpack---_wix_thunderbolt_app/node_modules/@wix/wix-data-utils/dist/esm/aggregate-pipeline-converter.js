import {
    __assign
} from "tslib";
export default function toPlatformizedAggregate(pipeline) {
    return pipeline.reduce(function(accumulated, currentStage, currentIndex) {
        var _a = Object.entries(currentStage)[0],
            key = _a[0],
            value = _a[1];
        if (key === '$match' && currentIndex === 0) {
            return {
                preFilteringStep: value,
            };
        }
        if (key === '$match') {
            return __assign(__assign({}, accumulated), {
                postFilteringStep: value
            });
        }
        if (key === '$group') {
            return __assign(__assign({}, accumulated), {
                processingStep: value
            });
        }
        return accumulated;
    }, {});
}
//# sourceMappingURL=aggregate-pipeline-converter.js.map