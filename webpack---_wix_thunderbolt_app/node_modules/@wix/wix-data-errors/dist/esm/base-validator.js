import {
    __extends
} from "tslib";
import {
    clone
} from '@wix/wix-data-utils';
import {
    messages,
    validationError
} from './errors';
var BaseValidator = /** @class */ (function() {
    function BaseValidator() {
        this._validations = [];
    }
    BaseValidator.prototype.arityIsZero = function(args) {
        var _this = this;
        return this.addValidation(function() {
            return args.length === 0;
        }, function() {
            return messages.arityValidations.arityIsZero(_this.operatorName);
        });
    };
    BaseValidator.prototype.arityIsOne = function(args) {
        var _this = this;
        return this.addValidation(function() {
            return args.length === 1;
        }, function() {
            return messages.arityValidations.arityIsOne(_this.operatorName);
        });
    };
    BaseValidator.prototype.arityIsTwo = function(args) {
        var _this = this;
        return this.addValidation(function() {
            return args.length === 2;
        }, function() {
            return messages.arityValidations.arityIsTwo(_this.operatorName);
        });
    };
    BaseValidator.prototype.arityIsThree = function(args) {
        var _this = this;
        return this.addValidation(function() {
            return args.length === 3;
        }, function() {
            return messages.arityValidations.arityIsThree(_this.operatorName);
        });
    };
    BaseValidator.prototype.arityIsAtLeastTwo = function(args) {
        var _this = this;
        return this.addValidation(function() {
            return args.length >= 2;
        }, function() {
            return messages.arityValidations.arityIsAtLeastTwo(_this.operatorName);
        });
    };
    BaseValidator.prototype.arityIsAtLeastOne = function(args) {
        var _this = this;
        return this.addValidation(function() {
            return args.length >= 1;
        }, function() {
            return messages.arityValidations.arityIsAtLeastOne(_this.operatorName);
        });
    };
    BaseValidator.prototype.addValidation = function(predicateFn, messageFn) {
        this._validations.push({
            predicateFn: predicateFn,
            messageFn: messageFn,
        });
        return this;
    };
    return BaseValidator;
}());
var AggregatingValidator = /** @class */ (function(_super) {
    __extends(AggregatingValidator, _super);

    function AggregatingValidator(previousInvalidArguments) {
        var _this = _super.call(this) || this;
        _this._invalidArguments = clone(previousInvalidArguments);
        return _this;
    }
    AggregatingValidator.prototype.validateAndAggregate = function() {
        var _this = this;
        var valid = this._validations.every(function(_a) {
            var predicateFn = _a.predicateFn,
                messageFn = _a.messageFn;
            return _this._appendIfInvalid(predicateFn(), messageFn());
        });
        return [this._invalidArguments, valid];
    };
    AggregatingValidator.prototype._appendIfInvalid = function(valid, message) {
        if (!valid) {
            this._invalidArguments.push(message);
            return false;
        }
        return true;
    };
    return AggregatingValidator;
}(BaseValidator));
export {
    AggregatingValidator
};
var RejectingValidator = /** @class */ (function(_super) {
    __extends(RejectingValidator, _super);

    function RejectingValidator() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    RejectingValidator.prototype.validateAndReject = function() {
        var _this = this;
        return Promise.resolve().then(function() {
            _this._validations.forEach(function(_a) {
                var predicateFn = _a.predicateFn,
                    messageFn = _a.messageFn;
                if (!predicateFn()) {
                    throw validationError(messageFn());
                }
            });
        });
    };
    return RejectingValidator;
}(BaseValidator));
export {
    RejectingValidator
};
//# sourceMappingURL=base-validator.js.map