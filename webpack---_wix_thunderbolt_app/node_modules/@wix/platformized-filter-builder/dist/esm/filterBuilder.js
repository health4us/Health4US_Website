import {
    __extends
} from "tslib";
import filterMixin from './filterMixin';
var FilterBuilder = (function(_super) {
    __extends(FilterBuilder, _super);

    function FilterBuilder() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(FilterBuilder.prototype, "constructorName", {
        get: function() {
            return 'FilterBuilder';
        },
        enumerable: false,
        configurable: true
    });
    FilterBuilder.prototype._build = function() {
        return this.getFilterModel();
    };
    return FilterBuilder;
}(filterMixin()));
export {
    FilterBuilder
};
var PlatformizedFilterBuilder = (function(_super) {
    __extends(PlatformizedFilterBuilder, _super);

    function PlatformizedFilterBuilder() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PlatformizedFilterBuilder.prototype.in = function() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return this._AndSetOperand('$in', '.in', args);
    };
    PlatformizedFilterBuilder.prototype.exists = function() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return this._binaryAnd('$exists', '.exists', args);
    };
    PlatformizedFilterBuilder.prototype.gte = function(field, value) {
        return this.ge(field, value);
    };
    PlatformizedFilterBuilder.prototype.lte = function(field, value) {
        return this.le(field, value);
    };
    PlatformizedFilterBuilder.prototype.build = function() {
        return this.getFilterModel();
    };
    return PlatformizedFilterBuilder;
}(filterMixin()));
export {
    PlatformizedFilterBuilder
};
export function platformizedFilterBuilder(encoder) {
    if (encoder === void 0) {
        encoder = {};
    }
    return new PlatformizedFilterBuilder(encoder);
}
export function filterBuilderFactory() {
    return new FilterBuilder({});
}
export default filterBuilderFactory;
//# sourceMappingURL=filterBuilder.js.map