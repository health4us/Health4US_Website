import {
    __assign
} from "tslib";
import {
    isCursorDefined
} from './paging/cursors';
import {
    PagingMetadata
} from './paging/pagingmetadata';
import {
    calcSkipNumber
} from './utils/skip-calculator';
import {
    messages,
    validationError
} from '@wix/wix-data-errors';
var WixDataQueryReferencedResult = /** @class */ (function() {
    function WixDataQueryReferencedResult(obj) {
        if (!obj) {
            return;
        }
        this._provider = obj.provider;
        this._collectionName = obj.collectionName;
        this._referenceAttribute = obj.referenceAttribute;
        this._holdingItemId = obj.holdingItemId;
        this._items = obj.items;
        this._totalCount = obj.totalCount;
        this._options = obj.options;
        var _a = obj.options || {},
            _b = _a.skip,
            skip = _b === void 0 ? 0 : _b,
            limit = _a.limit;
        this._skip = skip;
        this._limit = limit;
        this._cursors = obj.cursors;
        this._createdByCursor = obj.createdByCursor;
        this._hasNext = obj.hasNext;
    }
    Object.defineProperty(WixDataQueryReferencedResult.prototype, "items", {
        get: function() {
            return this._items;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WixDataQueryReferencedResult.prototype, "totalCount", {
        get: function() {
            return this._totalCount;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WixDataQueryReferencedResult.prototype, "nextCursor", {
        get: function() {
            return this._cursors && this._cursors.next;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WixDataQueryReferencedResult.prototype, "prevCursor", {
        get: function() {
            return this._cursors && this._cursors.prev;
        },
        enumerable: false,
        configurable: true
    });
    WixDataQueryReferencedResult.prototype.hasNext = function() {
        return this._hasNext;
    };
    WixDataQueryReferencedResult.prototype.hasPrev = function() {
        if (isCursorDefined(this._createdByCursor) || this._cursors) {
            return isCursorDefined(this.prevCursor);
        } else {
            return this._skip > 0;
        }
    };
    WixDataQueryReferencedResult.prototype.next = function() {
        var _this = this;
        if (!this.hasNext()) {
            return this._rejectNoNextPage();
        }
        if (isCursorDefined(this.nextCursor)) {
            return this._getNewCursorQuery(this.nextCursor)
                ._fetch()
                .then(function(newResp) {
                    return newResp._withTotalCount(_this._totalCount);
                });
        } else {
            return this._withChangedSkip(true)._fetch();
        }
    };
    WixDataQueryReferencedResult.prototype.prev = function() {
        var _this = this;
        if (!this.hasPrev()) {
            return this._rejectNoPrevPage();
        }
        if (isCursorDefined(this.prevCursor)) {
            return this._getNewCursorQuery(this.prevCursor)
                ._fetch()
                .then(function(newResp) {
                    return newResp._withTotalCount(_this._totalCount);
                });
        } else {
            return this._withChangedSkip(false)._fetch();
        }
    };
    WixDataQueryReferencedResult.prototype._rejectNoPrevPage = function() {
        return Promise.reject(validationError(messages.queryValidations.noPrevPage(this._collectionName)));
    };
    WixDataQueryReferencedResult.prototype._rejectNoNextPage = function() {
        return Promise.reject(validationError(messages.queryValidations.noNextPage(this._collectionName)));
    };
    WixDataQueryReferencedResult.prototype._withChangedSkip = function(isNext) {
        var newSkip = calcSkipNumber({
            skipNumber: this._skip,
            limitNumber: this._limit
        }, this._items.length, isNext);
        return referenceResultFactory({
            items: this._items,
            totalCount: this._totalCount,
            pagingMetadata: new PagingMetadata({
                total: this._totalCount,
            }),
        }, this._provider, this._collectionName, this._holdingItemId, this._referenceAttribute, __assign(__assign({}, this._options), {
            skip: newSkip,
            limit: this._limit
        }));
    };
    WixDataQueryReferencedResult.prototype._getNewCursorQuery = function(cursor) {
        return referenceResultFactory({}, this._provider, this._collectionName, '', // itemId must not be passed in cursored queries, value will be taken from cursor
            this._referenceAttribute, // attribute temporarily passed in cursored queries while EnableCursorPlugin is not fully enabled
            {
                cursor: cursor,
                limit: this._limit,
                omitTotalCount: true,
            });
    };
    WixDataQueryReferencedResult.prototype._fetch = function() {
        var _this = this;
        return this._provider
            .queryReferenced(this._collectionName, this._holdingItemId, this._referenceAttribute, this._options)
            .then(function(result) {
                return referenceResultFactory(result, _this._provider, _this._collectionName, _this._holdingItemId, _this._referenceAttribute, _this._options);
            });
    };
    WixDataQueryReferencedResult.prototype._withTotalCount = function(oldTotalCount) {
        this._totalCount = oldTotalCount;
        return this;
    };
    return WixDataQueryReferencedResult;
}());
export {
    WixDataQueryReferencedResult
};
export function referenceResultFactory(result, provider, collectionName, itemId, relationshipAttribute, options) {
    var items = result.items,
        totalCount = result.totalCount,
        pagingMetadata = result.pagingMetadata;
    var _a = pagingMetadata || new PagingMetadata(),
        total = _a.total,
        cursors = _a.cursors,
        _b = _a.hasNext,
        hasNext = _b === void 0 ? false : _b;
    return new WixDataQueryReferencedResult({
        provider: provider,
        collectionName: collectionName,
        referenceAttribute: relationshipAttribute,
        holdingItemId: itemId,
        items: items,
        totalCount: total || totalCount,
        options: options,
        cursors: cursors,
        createdByCursor: options === null || options === void 0 ? void 0 : options.cursor,
        hasNext: hasNext,
    });
}
//# sourceMappingURL=multiref.js.map