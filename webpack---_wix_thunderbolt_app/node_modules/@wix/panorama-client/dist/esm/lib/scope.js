import _defineProperty from "@babel/runtime/helpers/defineProperty";
import {
    defaults,
    deepDefaults
} from '../utils/general-utils';
export class Scope {
    constructor(data) {
        _defineProperty(this, "data", void 0);
        this.data = data;
    }
    getEntriesToDeepDefaults(data) {
        if (!data) {
            return undefined;
        }
        return Object.fromEntries(Object.entries(data).filter(_ref => {
            let [key] = _ref;
            return Scope.KEYS_TO_DEEP_DEFAULTS.includes(key);
        }));
    }
    addDataScope(data) {
        const outerDataArray = Array.isArray(data) ? data : [data];
        const deepDefaultData = deepDefaults(...outerDataArray.map(_data => this.getEntriesToDeepDefaults(_data)), this.getEntriesToDeepDefaults(this.data));
        return new Scope(defaults(deepDefaultData, ...outerDataArray, this.data));
    }
    getData() {
        return this.data;
    }
}
_defineProperty(Scope, "KEYS_TO_DEEP_DEFAULTS", ['tags', 'context']);
//# sourceMappingURL=scope.js.map