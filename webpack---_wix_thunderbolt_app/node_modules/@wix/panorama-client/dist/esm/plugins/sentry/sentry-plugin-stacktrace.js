import {
    extractArtifactDataFromScriptUrl
} from '../../utils/artifact-utils';
const splitOriginalStacktraceIntoFrames = originalException => {
    if (!(originalException instanceof Error)) {
        return [];
    }
    const {
        stack
    } = originalException;
    return (stack == null ? void 0 : stack.split('\n').map(raw => {
        return {
            raw
        };
    }).reverse()) || [];
};
export const extractArtifactsDataFromSentryEvent = (event, hint) => {
    var _event$exception;
    const artifacts = [];
    const map = new Map();
    const frames = ((_event$exception = event.exception) == null || (_event$exception = _event$exception.values) == null || (_event$exception = _event$exception[0]) == null || (_event$exception = _event$exception.stacktrace) == null ? void 0 : _event$exception.frames) || splitOriginalStacktraceIntoFrames(hint == null ? void 0 : hint.originalException);
    for (let i = frames.length - 1; i >= 0; i--) {
        const {
            filename,
            raw
        } = frames[i];
        const element = filename != null ? filename : raw;
        if (!element) {
            continue;
        }
        const artifactData = extractArtifactDataFromScriptUrl(element);
        if (!artifactData) {
            continue;
        }
        const {
            artifactId,
            artifactVersion
        } = artifactData;
        const key = artifactId + artifactVersion;
        if (map.has(key)) {
            continue;
        }
        map.set(key, true);
        artifacts.push(artifactData);
    }
    return artifacts;
};
//# sourceMappingURL=sentry-plugin-stacktrace.js.map