import {
    getGlobalHub,
    getMainHub
} from './sentry-plugin-state';
const getBreadcrumbsFromHub = hub => {
    var _hub$getScope;
    if (!hub) {
        return [];
    }
    const values = Object.values((_hub$getScope = hub.getScope()) != null ? _hub$getScope : {});
    const breadcrumbKeys = ['category', 'data', 'level', 'message', 'event_id', 'type'];
    try {
        for (const value of values) {
            var _value$;
            if (Array.isArray(value) && (_value$ = value[0]) != null && _value$.timestamp && breadcrumbKeys.some(key => {
                    var _value$2;
                    return !!((_value$2 = value[0]) != null && _value$2[key]);
                })) {
                return value;
            }
        }
        return [];
    } catch (_unused) {
        return [];
    }
};
export const getBreadcrumbs = globalConfig => {
    const breadcrumbs = [...getBreadcrumbsFromHub(getGlobalHub(globalConfig)), ...getBreadcrumbsFromHub(getMainHub(globalConfig))].map(breadcrumb => {
        let data;
        try {
            if (breadcrumb.data) {
                data = Object.entries(breadcrumb.data).reduce((res, _ref) => {
                    let [key, value] = _ref;
                    res[key] = Array.isArray(value) ? value.map(val => val == null ? void 0 : val.toString()) : value == null ? void 0 : value.toString();
                    return res;
                }, {});
            }
        } catch (_unused2) {}
        return {
            ...breadcrumb,
            ...(data ? {
                data
            } : {})
        };
    });
    return breadcrumbs.slice(Math.max(0, breadcrumbs.length - 100));
};

/**
 * Enrich 'ui.click' and 'ui.input' breadcrumbs in a way that nearest data-hook will be shown in the Sentry UI
 */
export function enrichBreadcrumbsWithDataHooks(breadcrumb, hint) {
    const {
        category
    } = breadcrumb;
    const isUiInteractionBreadcrumb = category && (category === 'ui.click' || category === 'ui.input');
    const targetElement = hint && hint.event && hint.event.target;
    if (isUiInteractionBreadcrumb && targetElement) {
        const nodeWithDataHook = targetElement.closest('[data-hook]');
        if (nodeWithDataHook) {
            const dataHook = nodeWithDataHook.getAttribute('data-hook');
            if (targetElement === nodeWithDataHook) {
                breadcrumb.message = breadcrumb.message + " [data-hook=\"" + dataHook + "\"]";
            } else {
                breadcrumb.message = breadcrumb.message + " parent:[data-hook=\"" + dataHook + "\"]";
            }
        }
    }
    return breadcrumb;
}
//# sourceMappingURL=sentry-plugin-breadcrumbs.js.map