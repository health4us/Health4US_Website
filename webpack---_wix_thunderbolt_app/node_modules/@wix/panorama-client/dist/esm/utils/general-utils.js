export const last = arr => Array.isArray(arr) ? arr[arr.length - 1] : undefined;
export const union = function() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
    }
    return [...new Set(args.flat()).values()];
};

/**
 * The reason spread operator is not used here is because of its behavior when passing an entry with undefined value explicitly:
 * const a = { hello: 'world' }
 * const b = {...a, hello: undefined }; // {hello: undefined}
 * We want to ignore the undefined value and use the defined value from the previous object instead.
 */
export const defaults = function() {
    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
    }
    return args.reduce((res, obj) => Object.entries(obj != null ? obj : {}).reduce((_res, _ref) => {
        let [key, value] = _ref;
        if (typeof _res[key] === 'undefined' && typeof value !== 'undefined') {
            _res[key] = value;
        }
        return _res;
    }, res), {});
};
export const deepDefaults = function(dest) {
    for (var _len3 = arguments.length, rest = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
        rest[_key3 - 1] = arguments[_key3];
    }
    const keys = union(...rest.map(value => Object.keys(value != null ? value : {})));
    const all = [dest, ...rest];
    return keys.reduce((res, key) => {
        const values = all.map(value => value == null ? void 0 : value[key]);
        const merged = defaults(...values);
        const hasValues = Object.values(merged).filter(value => typeof value !== 'undefined').length > 0;
        if (hasValues) {
            var _res2;
            res = (_res2 = res) != null ? _res2 : {};
            res[key] = merged;
        } else {
            var _res3;
            (_res3 = res) == null || delete _res3[key];
        }
        return res;
    }, dest ? {
        ...dest
    } : dest);
};
//# sourceMappingURL=general-utils.js.map