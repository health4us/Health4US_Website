"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ConvertersComposer = void 0;
/* eslint-disable @typescript-eslint/no-unsafe-return */
var mapValues_1 = require("../mapValues");
var isObjectButNotNull = function(obj) {
    return obj !== null && typeof obj === "object";
};
var ConvertersComposer = /** @class */ (function() {
    function ConvertersComposer() {
        var converters = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            converters[_i] = arguments[_i];
        }
        this._converters = converters;
    }
    ConvertersComposer.prototype.convertToCustomFormat = function(obj, parents, inArray) {
        var _a;
        if (parents === void 0) {
            parents = new Set();
        }
        if (inArray === void 0) {
            inArray = false;
        }
        if (isObjectButNotNull(obj)) {
            if (parents.has(obj)) {
                throw new TypeError("Converting circular structure to JSON");
            } else {
                parents.add(obj);
            }
        }
        if (Array.isArray(obj)) {
            return this._convertArray(obj, parents);
        }
        var serialized = (_a = this._findConverterToCustomFormat(obj)) === null || _a === void 0 ? void 0 : _a.convertToCustomFormat(obj, inArray);
        return isObjectButNotNull(obj) ? this._convertObject(serialized, obj, parents) : serialized;
    };
    ConvertersComposer.prototype.convertFromCustomFormat = function(obj) {
        var _this = this;
        var _a;
        var preprocessedObj = obj;
        if (Array.isArray(obj)) {
            preprocessedObj = obj.map(function(arrayMember) {
                return _this.convertFromCustomFormat(arrayMember);
            });
        } else if (isObjectButNotNull(obj)) {
            preprocessedObj = (0, mapValues_1.mapValues)(obj, this.convertFromCustomFormat.bind(this));
        }
        return (_a = this._findConverterFromCustomFormat(preprocessedObj)) === null || _a === void 0 ? void 0 : _a.convertFromCustomFormat(preprocessedObj);
    };
    ConvertersComposer.prototype._convertObject = function(serialized, obj, parents) {
        var _this = this;
        var result;
        if (typeof serialized.toJSON === "function") {
            // eslint-disable-next-line @typescript-eslint/no-unsafe-call
            result = (0, mapValues_1.mapValues)(serialized.toJSON(), function(value) {
                return _this.convertToCustomFormat(value, parents);
            });
        } else {
            result = (0, mapValues_1.mapValues)(serialized, function(value) {
                return _this.convertToCustomFormat(value, parents);
            });
        }
        parents.delete(obj);
        return result;
    };
    ConvertersComposer.prototype._convertArray = function(obj, parents) {
        var _this = this;
        var result = obj.map(function(arrayMember) {
            return _this.convertToCustomFormat(arrayMember, parents, true);
        });
        parents.delete(obj);
        return result;
    };
    ConvertersComposer.prototype._findConverterFromCustomFormat = function(obj) {
        return this._converters.find(function(candidate) {
            return candidate.canConvertFromCustomFormat(obj);
        });
    };
    ConvertersComposer.prototype._findConverterToCustomFormat = function(obj) {
        return this._converters.find(function(candidate) {
            return candidate.canConvertToCustomFormat(obj);
        });
    };
    return ConvertersComposer;
}());
exports.ConvertersComposer = ConvertersComposer;
//# sourceMappingURL=ConvertersComposer.js.map